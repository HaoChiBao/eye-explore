{"version":3,"file":"cognitiveservices-contentmoderator.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/imageModerationMappers.ts","../src/models/parameters.ts","../src/operations/imageModeration.ts","../src/models/textModerationMappers.ts","../src/operations/textModeration.ts","../src/models/listManagementImageListsMappers.ts","../src/operations/listManagementImageLists.ts","../src/models/listManagementTermListsMappers.ts","../src/operations/listManagementTermLists.ts","../src/models/listManagementImageMappers.ts","../src/operations/listManagementImage.ts","../src/models/listManagementTermMappers.ts","../src/operations/listManagementTerm.ts","../src/models/reviewsMappers.ts","../src/operations/reviews.ts","../src/contentModeratorClientContext.ts","../src/contentModeratorClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * The key value pair object properties.\n */\nexport interface KeyValuePair {\n  /**\n   * The key parameter.\n   */\n  key?: string;\n  /**\n   * The value parameter.\n   */\n  value?: string;\n}\n\n/**\n * Tag details.\n */\nexport interface Tag {\n  /**\n   * The key parameter.\n   */\n  key?: string;\n  /**\n   * The value parameter.\n   */\n  value?: string;\n}\n\n/**\n * Video frame property details.\n */\nexport interface Frame {\n  /**\n   * Timestamp of the frame.\n   */\n  timestamp?: string;\n  /**\n   * Frame image.\n   */\n  frameImage?: string;\n  /**\n   * Array of KeyValue.\n   */\n  metadata?: KeyValuePair[];\n  /**\n   * Reviewer result tags.\n   */\n  reviewerResultTags?: Tag[];\n}\n\n/**\n * The response for a Get Frames request.\n */\nexport interface Frames {\n  /**\n   * Id of the review.\n   */\n  reviewId?: string;\n  videoFrames?: Frame[];\n}\n\n/**\n * The category1 score details of the text. <a href=\"https://aka.ms/textClassifyCategories\">Click\n * here</a> for more details on category classification.\n */\nexport interface ClassificationCategory1 {\n  /**\n   * The category1 score.\n   */\n  score?: number;\n}\n\n/**\n * The category2 score details of the text. <a href=\"https://aka.ms/textClassifyCategories\">Click\n * here</a> for more details on category classification.\n */\nexport interface ClassificationCategory2 {\n  /**\n   * The category2 score.\n   */\n  score?: number;\n}\n\n/**\n * The category3 score details of the text. <a href=\"https://aka.ms/textClassifyCategories\">Click\n * here</a> for more details on category classification.\n */\nexport interface ClassificationCategory3 {\n  /**\n   * The category3 score.\n   */\n  score?: number;\n}\n\n/**\n * The classification details of the text.\n */\nexport interface Classification {\n  /**\n   * The category1 score details of the text. <a href=\"https://aka.ms/textClassifyCategories\">Click\n   * here</a> for more details on category classification.\n   */\n  category1?: ClassificationCategory1;\n  /**\n   * The category2 score details of the text. <a href=\"https://aka.ms/textClassifyCategories\">Click\n   * here</a> for more details on category classification.\n   */\n  category2?: ClassificationCategory2;\n  /**\n   * The category3 score details of the text. <a href=\"https://aka.ms/textClassifyCategories\">Click\n   * here</a> for more details on category classification.\n   */\n  category3?: ClassificationCategory3;\n  /**\n   * The review recommended flag.\n   */\n  reviewRecommended?: boolean;\n}\n\n/**\n * Status properties.\n */\nexport interface Status {\n  /**\n   * Status code.\n   */\n  code?: number;\n  /**\n   * Status description.\n   */\n  description?: string;\n  /**\n   * Exception status.\n   */\n  exception?: string;\n}\n\n/**\n * Email Address details.\n */\nexport interface Email {\n  /**\n   * Detected Email Address from the input text content.\n   */\n  detected?: string;\n  /**\n   * Subtype of the detected Email Address.\n   */\n  subType?: string;\n  /**\n   * Email Address in the input text content.\n   */\n  text?: string;\n  /**\n   * Index(Location) of the Email address in the input text content.\n   */\n  index?: number;\n}\n\n/**\n * Detected SSN details.\n */\nexport interface SSN {\n  /**\n   * Detected SSN in the input text content.\n   */\n  text?: string;\n  /**\n   * Index(Location) of the SSN in the input text content.\n   */\n  index?: number;\n}\n\n/**\n * IP Address details.\n */\nexport interface IPA {\n  /**\n   * Subtype of the detected IP Address.\n   */\n  subType?: string;\n  /**\n   * Detected IP Address.\n   */\n  text?: string;\n  /**\n   * Index(Location) of the IP Address in the input text content.\n   */\n  index?: number;\n}\n\n/**\n * Phone Property details.\n */\nexport interface Phone {\n  /**\n   * CountryCode of the detected Phone number.\n   */\n  countryCode?: string;\n  /**\n   * Detected Phone number.\n   */\n  text?: string;\n  /**\n   * Index(Location) of the Phone number in the input text content.\n   */\n  index?: number;\n}\n\n/**\n * Address details.\n */\nexport interface Address {\n  /**\n   * Detected Address.\n   */\n  text?: string;\n  /**\n   * Index(Location) of the Address in the input text content.\n   */\n  index?: number;\n}\n\n/**\n * Personal Identifier Information details.\n */\nexport interface PII {\n  email?: Email[];\n  sSN?: SSN[];\n  iPA?: IPA[];\n  phone?: Phone[];\n  address?: Address[];\n}\n\n/**\n * Detected Terms details.\n */\nexport interface DetectedTerms {\n  /**\n   * Index(Location) of the detected profanity term in the input text content.\n   */\n  index?: number;\n  /**\n   * Original Index(Location) of the detected profanity term in the input text content.\n   */\n  originalIndex?: number;\n  /**\n   * Matched Terms list Id.\n   */\n  listId?: number;\n  /**\n   * Detected profanity term.\n   */\n  term?: string;\n}\n\n/**\n * The response for a Screen text request.\n */\nexport interface Screen {\n  /**\n   * The original text.\n   */\n  originalText?: string;\n  /**\n   * The normalized text.\n   */\n  normalizedText?: string;\n  /**\n   * The autocorrected text\n   */\n  autoCorrectedText?: string;\n  /**\n   * The misrepresentation text.\n   */\n  misrepresentation?: string[];\n  /**\n   * The classification details of the text.\n   */\n  classification?: Classification;\n  /**\n   * The evaluate status.\n   */\n  status?: Status;\n  /**\n   * Personal Identifier Information details.\n   */\n  pII?: PII;\n  /**\n   * Language of the input text content.\n   */\n  language?: string;\n  terms?: DetectedTerms[];\n  /**\n   * Unique Content Moderator transaction Id.\n   */\n  trackingId?: string;\n}\n\n/**\n * Coordinates to the found face.\n */\nexport interface Face {\n  /**\n   * The bottom coordinate.\n   */\n  bottom?: number;\n  /**\n   * The left coordinate.\n   */\n  left?: number;\n  /**\n   * The right coordinate.\n   */\n  right?: number;\n  /**\n   * The top coordinate.\n   */\n  top?: number;\n}\n\n/**\n * Request object the contains found faces.\n */\nexport interface FoundFaces {\n  /**\n   * The evaluate status\n   */\n  status?: Status;\n  /**\n   * The tracking id.\n   */\n  trackingId?: string;\n  /**\n   * The cache id.\n   */\n  cacheId?: string;\n  /**\n   * True if result was found.\n   */\n  result?: boolean;\n  /**\n   * Number of faces found.\n   */\n  count?: number;\n  /**\n   * The advanced info.\n   */\n  advancedInfo?: KeyValuePair[];\n  /**\n   * The list of faces.\n   */\n  faces?: Face[];\n}\n\n/**\n * OCR candidate text.\n */\nexport interface Candidate {\n  /**\n   * The text found.\n   */\n  text?: string;\n  /**\n   * The confidence level.\n   */\n  confidence?: number;\n}\n\n/**\n * Contains the text found in image for the language specified.\n */\nexport interface OCR {\n  /**\n   * The evaluate status\n   */\n  status?: Status;\n  /**\n   * Array of KeyValue.\n   */\n  metadata?: KeyValuePair[];\n  /**\n   * The tracking id.\n   */\n  trackingId?: string;\n  /**\n   * The cache id.\n   */\n  cacheId?: string;\n  /**\n   * The ISO 639-3 code.\n   */\n  language?: string;\n  /**\n   * The found text.\n   */\n  text?: string;\n  /**\n   * The list of candidate text.\n   */\n  candidates?: Candidate[];\n}\n\n/**\n * Evaluate response object.\n */\nexport interface Evaluate {\n  /**\n   * The cache id.\n   */\n  cacheID?: string;\n  /**\n   * Evaluate result.\n   */\n  result?: boolean;\n  /**\n   * The tracking id.\n   */\n  trackingId?: string;\n  /**\n   * The adult classification score.\n   */\n  adultClassificationScore?: number;\n  /**\n   * Indicates if an image is classified as adult.\n   */\n  isImageAdultClassified?: boolean;\n  /**\n   * The racy classification score.\n   */\n  racyClassificationScore?: number;\n  /**\n   * Indicates if the image is classified as racy.\n   */\n  isImageRacyClassified?: boolean;\n  /**\n   * The advanced info.\n   */\n  advancedInfo?: KeyValuePair[];\n  /**\n   * The evaluate status\n   */\n  status?: Status;\n}\n\n/**\n * The match details.\n */\nexport interface Match {\n  /**\n   * Confidence score of the image match.\n   */\n  score?: number;\n  /**\n   * The match id.\n   */\n  matchId?: number;\n  /**\n   * The source.\n   */\n  source?: string;\n  /**\n   * The tags for match details.\n   */\n  tags?: number[];\n  /**\n   * The label.\n   */\n  label?: string;\n}\n\n/**\n * The response for a Match request.\n */\nexport interface MatchResponse {\n  /**\n   * The tracking id.\n   */\n  trackingId?: string;\n  /**\n   * The cache id.\n   */\n  cacheID?: string;\n  /**\n   * Indicates if there is a match.\n   */\n  isMatch?: boolean;\n  /**\n   * The match details.\n   */\n  matches?: Match[];\n  /**\n   * The evaluate status\n   */\n  status?: Status;\n}\n\n/**\n * Detect language result.\n */\nexport interface DetectedLanguage {\n  /**\n   * The detected language.\n   */\n  detectedLanguage?: string;\n  /**\n   * The detect language status\n   */\n  status?: Status;\n  /**\n   * The tracking id.\n   */\n  trackingId?: string;\n}\n\n/**\n * Image List Properties.\n */\nexport interface ImageList {\n  /**\n   * Image List Id.\n   */\n  id?: number;\n  /**\n   * Image List Name.\n   */\n  name?: string;\n  /**\n   * Description for image list.\n   */\n  description?: string;\n  /**\n   * Image List Metadata.\n   */\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * Term List  Properties.\n */\nexport interface TermList {\n  /**\n   * Term list Id.\n   */\n  id?: number;\n  /**\n   * Term list name.\n   */\n  name?: string;\n  /**\n   * Description for term list.\n   */\n  description?: string;\n  /**\n   * Term list metadata.\n   */\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * Refresh Index Response.\n */\nexport interface RefreshIndex {\n  /**\n   * Content source Id.\n   */\n  contentSourceId?: string;\n  /**\n   * Update success status.\n   */\n  isUpdateSuccess?: boolean;\n  /**\n   * Advanced info list.\n   */\n  advancedInfo?: { [propertyName: string]: string }[];\n  /**\n   * Refresh index status.\n   */\n  status?: Status;\n  /**\n   * Tracking Id.\n   */\n  trackingId?: string;\n}\n\n/**\n * An interface representing ImageAdditionalInfoItem.\n */\nexport interface ImageAdditionalInfoItem {\n  /**\n   * Key parameter.\n   */\n  key?: string;\n  /**\n   * Value parameter.\n   */\n  value?: string;\n}\n\n/**\n * Image Properties.\n */\nexport interface Image {\n  /**\n   * Content Id.\n   */\n  contentId?: string;\n  /**\n   * Advanced info list.\n   */\n  additionalInfo?: ImageAdditionalInfoItem[];\n  /**\n   * Status details.\n   */\n  status?: Status;\n  /**\n   * Tracking Id.\n   */\n  trackingId?: string;\n}\n\n/**\n * Image Id properties.\n */\nexport interface ImageIds {\n  /**\n   * Source of the content.\n   */\n  contentSource?: string;\n  /**\n   * Id of the contents.\n   */\n  contentIds?: number[];\n  /**\n   * Get Image status.\n   */\n  status?: Status;\n  /**\n   * Tracking Id.\n   */\n  trackingId?: string;\n}\n\n/**\n * Terms in list Id passed.\n */\nexport interface TermsInList {\n  /**\n   * Added term details.\n   */\n  term?: string;\n}\n\n/**\n * All term Id response properties.\n */\nexport interface TermsData {\n  /**\n   * Language of the terms.\n   */\n  language?: string;\n  /**\n   * List of terms.\n   */\n  terms?: TermsInList[];\n  /**\n   * Term Status.\n   */\n  status?: Status;\n  /**\n   * Tracking Id.\n   */\n  trackingId?: string;\n}\n\n/**\n * Paging details.\n */\nexport interface TermsPaging {\n  /**\n   * Total details.\n   */\n  total?: number;\n  /**\n   * Limit details.\n   */\n  limit?: number;\n  /**\n   * Offset details.\n   */\n  offset?: number;\n  /**\n   * Returned text details.\n   */\n  returned?: number;\n}\n\n/**\n * Terms properties.\n */\nexport interface Terms {\n  /**\n   * Term data details.\n   */\n  data?: TermsData;\n  /**\n   * Paging details.\n   */\n  paging?: TermsPaging;\n}\n\n/**\n * The Review object.\n */\nexport interface Review {\n  /**\n   * Id of the review.\n   */\n  reviewId?: string;\n  /**\n   * Name of the subteam.\n   */\n  subTeam?: string;\n  /**\n   * The status string (<Pending, Complete>).\n   */\n  status?: string;\n  /**\n   * Array of KeyValue with Reviewer set Tags.\n   */\n  reviewerResultTags?: KeyValuePair[];\n  /**\n   * The reviewer name.\n   */\n  createdBy?: string;\n  /**\n   * Array of KeyValue.\n   */\n  metadata?: KeyValuePair[];\n  /**\n   * The type of content.\n   */\n  type?: string;\n  /**\n   * The content value.\n   */\n  content?: string;\n  /**\n   * Id of the content.\n   */\n  contentId?: string;\n  /**\n   * The callback endpoint.\n   */\n  callbackEndpoint?: string;\n}\n\n/**\n * Job Execution Report Values.\n */\nexport interface JobExecutionReportDetails {\n  /**\n   * Time details.\n   */\n  ts?: string;\n  /**\n   * Message details.\n   */\n  msg?: string;\n}\n\n/**\n * The Job object.\n */\nexport interface Job {\n  /**\n   * The job id.\n   */\n  id?: string;\n  /**\n   * The team name associated with the job.\n   */\n  teamName?: string;\n  /**\n   * The status string (<Pending, Failed, Completed>).\n   */\n  status?: string;\n  /**\n   * The Id of the workflow.\n   */\n  workflowId?: string;\n  /**\n   * Type of the content.\n   */\n  type?: string;\n  /**\n   * The callback endpoint.\n   */\n  callBackEndpoint?: string;\n  /**\n   * Review Id if one is created.\n   */\n  reviewId?: string;\n  /**\n   * Array of KeyValue pairs.\n   */\n  resultMetaData?: KeyValuePair[];\n  /**\n   * Job execution report- Array of KeyValue pairs object.\n   */\n  jobExecutionReport?: JobExecutionReportDetails[];\n}\n\n/**\n * The list of job ids.\n */\nexport interface JobListResult {\n  /**\n   * The job id.\n   */\n  value?: string[];\n}\n\n/**\n * An interface representing JobId.\n */\nexport interface JobId {\n  /**\n   * Id of the created job.\n   */\n  jobId?: string;\n}\n\n/**\n * Error body.\n */\nexport interface ErrorModel {\n  code?: string;\n  message?: string;\n}\n\n/**\n * Error information returned by the API\n */\nexport interface APIError {\n  error?: ErrorModel;\n}\n\n/**\n * An interface representing Body.\n */\nexport interface Body {\n  /**\n   * Name of the list.\n   */\n  name?: string;\n  /**\n   * Description of the list.\n   */\n  description?: string;\n  /**\n   * Metadata of the list.\n   */\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * An interface representing CreateReviewBodyItemMetadataItem.\n */\nexport interface CreateReviewBodyItemMetadataItem {\n  /**\n   * Your key parameter.\n   */\n  key: string;\n  /**\n   * Your value parameter.\n   */\n  value: string;\n}\n\n/**\n * Schema items of the body.\n */\nexport interface CreateReviewBodyItem {\n  /**\n   * Type of the content. Possible values include: 'Image', 'Text'\n   */\n  type: Type;\n  /**\n   * Content to review.\n   */\n  content: string;\n  /**\n   * Content Identifier.\n   */\n  contentId: string;\n  /**\n   * Optional CallbackEndpoint.\n   */\n  callbackEndpoint?: string;\n  /**\n   * Optional metadata details.\n   */\n  metadata?: CreateReviewBodyItemMetadataItem[];\n}\n\n/**\n * An interface representing Content.\n */\nexport interface Content {\n  /**\n   * Content to evaluate for a job.\n   */\n  contentValue: string;\n}\n\n/**\n * An interface representing TranscriptModerationBodyItemTermsItem.\n */\nexport interface TranscriptModerationBodyItemTermsItem {\n  /**\n   * Index of the word\n   */\n  index: number;\n  /**\n   * Detected word.\n   */\n  term: string;\n}\n\n/**\n * Schema items of the body.\n */\nexport interface TranscriptModerationBodyItem {\n  /**\n   * Timestamp of the image.\n   */\n  timestamp: string;\n  /**\n   * Optional metadata details.\n   */\n  terms: TranscriptModerationBodyItemTermsItem[];\n}\n\n/**\n * An interface representing ImageUrl.\n */\nexport interface ImageUrl {\n  /**\n   * Default value: 'URL'.\n   */\n  dataRepresentation?: string;\n  value?: string;\n}\n\n/**\n * An interface representing CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem.\n */\nexport interface CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem {\n  /**\n   * Your key parameter.\n   */\n  key: string;\n  /**\n   * Your value parameter.\n   */\n  value: string;\n}\n\n/**\n * An interface representing CreateVideoReviewsBodyItemVideoFramesItemMetadataItem.\n */\nexport interface CreateVideoReviewsBodyItemVideoFramesItemMetadataItem {\n  /**\n   * Your key parameter.\n   */\n  key: string;\n  /**\n   * Your value parameter.\n   */\n  value: string;\n}\n\n/**\n * An interface representing CreateVideoReviewsBodyItemVideoFramesItem.\n */\nexport interface CreateVideoReviewsBodyItemVideoFramesItem {\n  /**\n   * Id of the frame.\n   */\n  id: string;\n  /**\n   * Timestamp of the frame.\n   */\n  timestamp: number;\n  /**\n   * Frame image Url.\n   */\n  frameImage: string;\n  reviewerResultTags?: CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem[];\n  /**\n   * Optional metadata details.\n   */\n  metadata?: CreateVideoReviewsBodyItemVideoFramesItemMetadataItem[];\n}\n\n/**\n * An interface representing CreateVideoReviewsBodyItemMetadataItem.\n */\nexport interface CreateVideoReviewsBodyItemMetadataItem {\n  /**\n   * Your key parameter.\n   */\n  key: string;\n  /**\n   * Your value parameter.\n   */\n  value: string;\n}\n\n/**\n * Schema items of the body.\n */\nexport interface CreateVideoReviewsBodyItem {\n  /**\n   * Optional metadata details.\n   */\n  videoFrames?: CreateVideoReviewsBodyItemVideoFramesItem[];\n  /**\n   * Optional metadata details.\n   */\n  metadata?: CreateVideoReviewsBodyItemMetadataItem[];\n  /**\n   * Video content url to review.\n   */\n  content: string;\n  /**\n   * Content Identifier.\n   */\n  contentId: string;\n  /**\n   * Status of the video(Complete,Unpublished,Pending). Possible values include: 'Complete',\n   * 'Unpublished', 'Pending'\n   */\n  status: StatusEnum;\n  /**\n   * Timescale of the video.\n   */\n  timescale?: number;\n  /**\n   * Optional CallbackEndpoint.\n   */\n  callbackEndpoint?: string;\n}\n\n/**\n * An interface representing VideoFrameBodyItemReviewerResultTagsItem.\n */\nexport interface VideoFrameBodyItemReviewerResultTagsItem {\n  /**\n   * Your key parameter.\n   */\n  key: string;\n  /**\n   * Your value parameter.\n   */\n  value: string;\n}\n\n/**\n * An interface representing VideoFrameBodyItemMetadataItem.\n */\nexport interface VideoFrameBodyItemMetadataItem {\n  /**\n   * Your key parameter.\n   */\n  key: string;\n  /**\n   * Your value parameter.\n   */\n  value: string;\n}\n\n/**\n * Schema items of the body.\n */\nexport interface VideoFrameBodyItem {\n  /**\n   * Timestamp of the frame.\n   */\n  timestamp: string;\n  /**\n   * Content to review.\n   */\n  frameImage: string;\n  reviewerResultTags?: VideoFrameBodyItemReviewerResultTagsItem[];\n  /**\n   * Optional metadata details.\n   */\n  metadata?: VideoFrameBodyItemMetadataItem[];\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationFindFacesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationOCRMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n  /**\n   * When set to True, the image goes through additional processing to come with additional\n   * candidates.\n   *\n   * image/tiff is not supported when enhanced is set to true\n   *\n   * Note: This impacts the response time. Default value: false.\n   */\n  enhanced?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationEvaluateMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationMatchMethodOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The list Id.\n   */\n  listId?: string;\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationFindFacesFileInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationFindFacesUrlInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationOCRUrlInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n  /**\n   * When set to True, the image goes through additional processing to come with additional\n   * candidates.\n   *\n   * image/tiff is not supported when enhanced is set to true\n   *\n   * Note: This impacts the response time. Default value: false.\n   */\n  enhanced?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationOCRFileInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n  /**\n   * When set to True, the image goes through additional processing to come with additional\n   * candidates.\n   *\n   * image/tiff is not supported when enhanced is set to true\n   *\n   * Note: This impacts the response time. Default value: false.\n   */\n  enhanced?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationEvaluateFileInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationEvaluateUrlInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationMatchUrlInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The list Id.\n   */\n  listId?: string;\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImageModerationMatchFileInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The list Id.\n   */\n  listId?: string;\n  /**\n   * Whether to retain the submitted image for future use; defaults to false if omitted.\n   */\n  cacheImage?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface TextModerationScreenTextOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Language of the text.\n   */\n  language?: string;\n  /**\n   * Autocorrect text. Default value: false.\n   */\n  autocorrect?: boolean;\n  /**\n   * Detect personal identifiable information. Default value: false.\n   */\n  pII?: boolean;\n  /**\n   * The list Id.\n   */\n  listId?: string;\n  /**\n   * Classify input. Default value: false.\n   */\n  classify?: boolean;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ListManagementImageAddImageOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Tag for the image.\n   */\n  tag?: number;\n  /**\n   * The image label.\n   */\n  label?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ListManagementImageAddImageUrlInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Tag for the image.\n   */\n  tag?: number;\n  /**\n   * The image label.\n   */\n  label?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ListManagementImageAddImageFileInputOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Tag for the image.\n   */\n  tag?: number;\n  /**\n   * The image label.\n   */\n  label?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ListManagementTermGetAllTermsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * The pagination start index.\n   */\n  offset?: number;\n  /**\n   * The max limit.\n   */\n  limit?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ReviewsCreateReviewsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * SubTeam of your team, you want to assign the created review to.\n   */\n  subTeam?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ReviewsCreateJobOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Callback endpoint for posting the create job result.\n   */\n  callBackEndpoint?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ReviewsAddVideoFrameOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Timescale of the video you are adding frames to.\n   */\n  timescale?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ReviewsGetVideoFramesOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Time stamp of the frame from where you want to start fetching the frames.\n   */\n  startSeed?: number;\n  /**\n   * Number of frames to fetch.\n   */\n  noOfRecords?: number;\n  /**\n   * Get frames filtered by tags.\n   */\n  filter?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ReviewsCreateVideoReviewsOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * SubTeam of your team, you want to assign the created review to.\n   */\n  subTeam?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ReviewsAddVideoFrameUrlOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Timescale of the video.\n   */\n  timescale?: number;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ReviewsAddVideoFrameStreamOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Timescale of the video .\n   */\n  timescale?: number;\n}\n\n/**\n * Defines values for Type.\n * Possible values include: 'Image', 'Text'\n * @readonly\n * @enum {string}\n */\nexport type Type = 'Image' | 'Text';\n\n/**\n * Defines values for StatusEnum.\n * Possible values include: 'Complete', 'Unpublished', 'Pending'\n * @readonly\n * @enum {string}\n */\nexport type StatusEnum = 'Complete' | 'Unpublished' | 'Pending';\n\n/**\n * Defines values for TextContentType.\n * Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'\n * @readonly\n * @enum {string}\n */\nexport type TextContentType = 'text/plain' | 'text/html' | 'text/xml' | 'text/markdown';\n\n/**\n * Defines values for TextContentType1.\n * Possible values include: 'text/plain', 'text/html', 'text/xml', 'text/markdown'\n * @readonly\n * @enum {string}\n */\nexport type TextContentType1 = 'text/plain' | 'text/html' | 'text/xml' | 'text/markdown';\n\n/**\n * Defines values for ContentType.\n * Possible values include: 'Image', 'Text', 'Video'\n * @readonly\n * @enum {string}\n */\nexport type ContentType = 'Image' | 'Text' | 'Video';\n\n/**\n * Defines values for JobContentType.\n * Possible values include: 'application/json', 'image/jpeg'\n * @readonly\n * @enum {string}\n */\nexport type JobContentType = 'application/json' | 'image/jpeg';\n\n/**\n * Contains response data for the findFaces operation.\n */\nexport type ImageModerationFindFacesResponse = FoundFaces & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FoundFaces;\n    };\n};\n\n/**\n * Contains response data for the oCRMethod operation.\n */\nexport type ImageModerationOCRMethodResponse = OCR & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OCR;\n    };\n};\n\n/**\n * Contains response data for the evaluateMethod operation.\n */\nexport type ImageModerationEvaluateMethodResponse = Evaluate & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Evaluate;\n    };\n};\n\n/**\n * Contains response data for the matchMethod operation.\n */\nexport type ImageModerationMatchMethodResponse = MatchResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MatchResponse;\n    };\n};\n\n/**\n * Contains response data for the findFacesFileInput operation.\n */\nexport type ImageModerationFindFacesFileInputResponse = FoundFaces & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FoundFaces;\n    };\n};\n\n/**\n * Contains response data for the findFacesUrlInput operation.\n */\nexport type ImageModerationFindFacesUrlInputResponse = FoundFaces & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: FoundFaces;\n    };\n};\n\n/**\n * Contains response data for the oCRUrlInput operation.\n */\nexport type ImageModerationOCRUrlInputResponse = OCR & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OCR;\n    };\n};\n\n/**\n * Contains response data for the oCRFileInput operation.\n */\nexport type ImageModerationOCRFileInputResponse = OCR & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OCR;\n    };\n};\n\n/**\n * Contains response data for the evaluateFileInput operation.\n */\nexport type ImageModerationEvaluateFileInputResponse = Evaluate & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Evaluate;\n    };\n};\n\n/**\n * Contains response data for the evaluateUrlInput operation.\n */\nexport type ImageModerationEvaluateUrlInputResponse = Evaluate & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Evaluate;\n    };\n};\n\n/**\n * Contains response data for the matchUrlInput operation.\n */\nexport type ImageModerationMatchUrlInputResponse = MatchResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MatchResponse;\n    };\n};\n\n/**\n * Contains response data for the matchFileInput operation.\n */\nexport type ImageModerationMatchFileInputResponse = MatchResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: MatchResponse;\n    };\n};\n\n/**\n * Contains response data for the screenText operation.\n */\nexport type TextModerationScreenTextResponse = Screen & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Screen;\n    };\n};\n\n/**\n * Contains response data for the detectLanguage operation.\n */\nexport type TextModerationDetectLanguageResponse = DetectedLanguage & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: DetectedLanguage;\n    };\n};\n\n/**\n * Contains response data for the getDetails operation.\n */\nexport type ListManagementImageListsGetDetailsResponse = ImageList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ImageList;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type ListManagementImageListsDeleteMethodResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: string;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: string;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ListManagementImageListsUpdateResponse = ImageList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ImageList;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type ListManagementImageListsCreateResponse = ImageList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ImageList;\n    };\n};\n\n/**\n * Contains response data for the getAllImageLists operation.\n */\nexport type ListManagementImageListsGetAllImageListsResponse = Array<ImageList> & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ImageList[];\n    };\n};\n\n/**\n * Contains response data for the refreshIndexMethod operation.\n */\nexport type ListManagementImageListsRefreshIndexMethodResponse = RefreshIndex & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: RefreshIndex;\n    };\n};\n\n/**\n * Contains response data for the getDetails operation.\n */\nexport type ListManagementTermListsGetDetailsResponse = TermList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TermList;\n    };\n};\n\n/**\n * Contains response data for the deleteMethod operation.\n */\nexport type ListManagementTermListsDeleteMethodResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: string;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: string;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ListManagementTermListsUpdateResponse = TermList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TermList;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type ListManagementTermListsCreateResponse = TermList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TermList;\n    };\n};\n\n/**\n * Contains response data for the getAllTermLists operation.\n */\nexport type ListManagementTermListsGetAllTermListsResponse = Array<TermList> & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: TermList[];\n    };\n};\n\n/**\n * Contains response data for the refreshIndexMethod operation.\n */\nexport type ListManagementTermListsRefreshIndexMethodResponse = RefreshIndex & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: RefreshIndex;\n    };\n};\n\n/**\n * Contains response data for the addImage operation.\n */\nexport type ListManagementImageAddImageResponse = Image & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Image;\n    };\n};\n\n/**\n * Contains response data for the deleteAllImages operation.\n */\nexport type ListManagementImageDeleteAllImagesResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: string;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: string;\n    };\n};\n\n/**\n * Contains response data for the getAllImageIds operation.\n */\nexport type ListManagementImageGetAllImageIdsResponse = ImageIds & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ImageIds;\n    };\n};\n\n/**\n * Contains response data for the deleteImage operation.\n */\nexport type ListManagementImageDeleteImageResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: string;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: string;\n    };\n};\n\n/**\n * Contains response data for the addImageUrlInput operation.\n */\nexport type ListManagementImageAddImageUrlInputResponse = Image & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Image;\n    };\n};\n\n/**\n * Contains response data for the addImageFileInput operation.\n */\nexport type ListManagementImageAddImageFileInputResponse = Image & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Image;\n    };\n};\n\n/**\n * Contains response data for the deleteTerm operation.\n */\nexport type ListManagementTermDeleteTermResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: string;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: string;\n    };\n};\n\n/**\n * Contains response data for the getAllTerms operation.\n */\nexport type ListManagementTermGetAllTermsResponse = Terms & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Terms;\n    };\n};\n\n/**\n * Contains response data for the deleteAllTerms operation.\n */\nexport type ListManagementTermDeleteAllTermsResponse = {\n  /**\n   * The parsed response body.\n   */\n  body: string;\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: string;\n    };\n};\n\n/**\n * Contains response data for the getReview operation.\n */\nexport type ReviewsGetReviewResponse = Review & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Review;\n    };\n};\n\n/**\n * Contains response data for the getJobDetails operation.\n */\nexport type ReviewsGetJobDetailsResponse = Job & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Job;\n    };\n};\n\n/**\n * Contains response data for the createReviews operation.\n */\nexport type ReviewsCreateReviewsResponse = Array<string> & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: string[];\n    };\n};\n\n/**\n * Contains response data for the createJob operation.\n */\nexport type ReviewsCreateJobResponse = JobId & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: JobId;\n    };\n};\n\n/**\n * Contains response data for the getVideoFrames operation.\n */\nexport type ReviewsGetVideoFramesResponse = Frames & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Frames;\n    };\n};\n\n/**\n * Contains response data for the createVideoReviews operation.\n */\nexport type ReviewsCreateVideoReviewsResponse = Array<string> & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: string[];\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const KeyValuePair: msRest.CompositeMapper = {\n  serializedName: \"KeyValuePair\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyValuePair\",\n    modelProperties: {\n      key: {\n        serializedName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Tag: msRest.CompositeMapper = {\n  serializedName: \"Tag\",\n  type: {\n    name: \"Composite\",\n    className: \"Tag\",\n    modelProperties: {\n      key: {\n        serializedName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Frame: msRest.CompositeMapper = {\n  serializedName: \"Frame\",\n  type: {\n    name: \"Composite\",\n    className: \"Frame\",\n    modelProperties: {\n      timestamp: {\n        serializedName: \"Timestamp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      frameImage: {\n        serializedName: \"FrameImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValuePair\"\n            }\n          }\n        }\n      },\n      reviewerResultTags: {\n        serializedName: \"ReviewerResultTags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Tag\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Frames: msRest.CompositeMapper = {\n  serializedName: \"Frames\",\n  type: {\n    name: \"Composite\",\n    className: \"Frames\",\n    modelProperties: {\n      reviewId: {\n        serializedName: \"ReviewId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      videoFrames: {\n        serializedName: \"VideoFrames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Frame\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ClassificationCategory1: msRest.CompositeMapper = {\n  serializedName: \"Classification_Category1\",\n  type: {\n    name: \"Composite\",\n    className: \"ClassificationCategory1\",\n    modelProperties: {\n      score: {\n        serializedName: \"Score\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClassificationCategory2: msRest.CompositeMapper = {\n  serializedName: \"Classification_Category2\",\n  type: {\n    name: \"Composite\",\n    className: \"ClassificationCategory2\",\n    modelProperties: {\n      score: {\n        serializedName: \"Score\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClassificationCategory3: msRest.CompositeMapper = {\n  serializedName: \"Classification_Category3\",\n  type: {\n    name: \"Composite\",\n    className: \"ClassificationCategory3\",\n    modelProperties: {\n      score: {\n        serializedName: \"Score\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Classification: msRest.CompositeMapper = {\n  serializedName: \"Classification\",\n  type: {\n    name: \"Composite\",\n    className: \"Classification\",\n    modelProperties: {\n      category1: {\n        serializedName: \"Category1\",\n        type: {\n          name: \"Composite\",\n          className: \"ClassificationCategory1\"\n        }\n      },\n      category2: {\n        serializedName: \"Category2\",\n        type: {\n          name: \"Composite\",\n          className: \"ClassificationCategory2\"\n        }\n      },\n      category3: {\n        serializedName: \"Category3\",\n        type: {\n          name: \"Composite\",\n          className: \"ClassificationCategory3\"\n        }\n      },\n      reviewRecommended: {\n        serializedName: \"ReviewRecommended\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Status: msRest.CompositeMapper = {\n  serializedName: \"Status\",\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      code: {\n        serializedName: \"Code\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      description: {\n        serializedName: \"Description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exception: {\n        serializedName: \"Exception\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Email: msRest.CompositeMapper = {\n  serializedName: \"Email\",\n  type: {\n    name: \"Composite\",\n    className: \"Email\",\n    modelProperties: {\n      detected: {\n        serializedName: \"Detected\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subType: {\n        serializedName: \"SubType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      text: {\n        serializedName: \"Text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      index: {\n        serializedName: \"Index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SSN: msRest.CompositeMapper = {\n  serializedName: \"SSN\",\n  type: {\n    name: \"Composite\",\n    className: \"SSN\",\n    modelProperties: {\n      text: {\n        serializedName: \"Text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      index: {\n        serializedName: \"Index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const IPA: msRest.CompositeMapper = {\n  serializedName: \"IPA\",\n  type: {\n    name: \"Composite\",\n    className: \"IPA\",\n    modelProperties: {\n      subType: {\n        serializedName: \"SubType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      text: {\n        serializedName: \"Text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      index: {\n        serializedName: \"Index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Phone: msRest.CompositeMapper = {\n  serializedName: \"Phone\",\n  type: {\n    name: \"Composite\",\n    className: \"Phone\",\n    modelProperties: {\n      countryCode: {\n        serializedName: \"CountryCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      text: {\n        serializedName: \"Text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      index: {\n        serializedName: \"Index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Address: msRest.CompositeMapper = {\n  serializedName: \"Address\",\n  type: {\n    name: \"Composite\",\n    className: \"Address\",\n    modelProperties: {\n      text: {\n        serializedName: \"Text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      index: {\n        serializedName: \"Index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PII: msRest.CompositeMapper = {\n  serializedName: \"PII\",\n  type: {\n    name: \"Composite\",\n    className: \"PII\",\n    modelProperties: {\n      email: {\n        serializedName: \"Email\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Email\"\n            }\n          }\n        }\n      },\n      sSN: {\n        serializedName: \"SSN\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SSN\"\n            }\n          }\n        }\n      },\n      iPA: {\n        serializedName: \"IPA\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IPA\"\n            }\n          }\n        }\n      },\n      phone: {\n        serializedName: \"Phone\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Phone\"\n            }\n          }\n        }\n      },\n      address: {\n        serializedName: \"Address\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Address\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DetectedTerms: msRest.CompositeMapper = {\n  serializedName: \"DetectedTerms\",\n  type: {\n    name: \"Composite\",\n    className: \"DetectedTerms\",\n    modelProperties: {\n      index: {\n        serializedName: \"Index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      originalIndex: {\n        serializedName: \"OriginalIndex\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      listId: {\n        serializedName: \"ListId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      term: {\n        serializedName: \"Term\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Screen: msRest.CompositeMapper = {\n  serializedName: \"Screen\",\n  type: {\n    name: \"Composite\",\n    className: \"Screen\",\n    modelProperties: {\n      originalText: {\n        serializedName: \"OriginalText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      normalizedText: {\n        serializedName: \"NormalizedText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoCorrectedText: {\n        serializedName: \"AutoCorrectedText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      misrepresentation: {\n        serializedName: \"Misrepresentation\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      classification: {\n        serializedName: \"Classification\",\n        type: {\n          name: \"Composite\",\n          className: \"Classification\"\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      },\n      pII: {\n        serializedName: \"PII\",\n        type: {\n          name: \"Composite\",\n          className: \"PII\"\n        }\n      },\n      language: {\n        serializedName: \"Language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      terms: {\n        serializedName: \"Terms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DetectedTerms\"\n            }\n          }\n        }\n      },\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Face: msRest.CompositeMapper = {\n  serializedName: \"Face\",\n  type: {\n    name: \"Composite\",\n    className: \"Face\",\n    modelProperties: {\n      bottom: {\n        serializedName: \"Bottom\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      left: {\n        serializedName: \"Left\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      right: {\n        serializedName: \"Right\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      top: {\n        serializedName: \"Top\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const FoundFaces: msRest.CompositeMapper = {\n  serializedName: \"FoundFaces\",\n  type: {\n    name: \"Composite\",\n    className: \"FoundFaces\",\n    modelProperties: {\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      },\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheId: {\n        serializedName: \"CacheId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      result: {\n        serializedName: \"Result\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      count: {\n        serializedName: \"Count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      advancedInfo: {\n        serializedName: \"AdvancedInfo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValuePair\"\n            }\n          }\n        }\n      },\n      faces: {\n        serializedName: \"Faces\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Face\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Candidate: msRest.CompositeMapper = {\n  serializedName: \"Candidate\",\n  type: {\n    name: \"Composite\",\n    className: \"Candidate\",\n    modelProperties: {\n      text: {\n        serializedName: \"Text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      confidence: {\n        serializedName: \"Confidence\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OCR: msRest.CompositeMapper = {\n  serializedName: \"OCR\",\n  type: {\n    name: \"Composite\",\n    className: \"OCR\",\n    modelProperties: {\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValuePair\"\n            }\n          }\n        }\n      },\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheId: {\n        serializedName: \"CacheId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      language: {\n        serializedName: \"Language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      text: {\n        serializedName: \"Text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      candidates: {\n        serializedName: \"Candidates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Candidate\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Evaluate: msRest.CompositeMapper = {\n  serializedName: \"Evaluate\",\n  type: {\n    name: \"Composite\",\n    className: \"Evaluate\",\n    modelProperties: {\n      cacheID: {\n        serializedName: \"CacheID\",\n        type: {\n          name: \"String\"\n        }\n      },\n      result: {\n        serializedName: \"Result\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adultClassificationScore: {\n        serializedName: \"AdultClassificationScore\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isImageAdultClassified: {\n        serializedName: \"IsImageAdultClassified\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      racyClassificationScore: {\n        serializedName: \"RacyClassificationScore\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isImageRacyClassified: {\n        serializedName: \"IsImageRacyClassified\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      advancedInfo: {\n        serializedName: \"AdvancedInfo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValuePair\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      }\n    }\n  }\n};\n\nexport const Match: msRest.CompositeMapper = {\n  serializedName: \"Match\",\n  type: {\n    name: \"Composite\",\n    className: \"Match\",\n    modelProperties: {\n      score: {\n        serializedName: \"Score\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      matchId: {\n        serializedName: \"MatchId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      source: {\n        serializedName: \"Source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"Tags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      label: {\n        serializedName: \"Label\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MatchResponse: msRest.CompositeMapper = {\n  serializedName: \"MatchResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"MatchResponse\",\n    modelProperties: {\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheID: {\n        serializedName: \"CacheID\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isMatch: {\n        serializedName: \"IsMatch\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      matches: {\n        serializedName: \"Matches\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Match\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      }\n    }\n  }\n};\n\nexport const DetectedLanguage: msRest.CompositeMapper = {\n  serializedName: \"DetectedLanguage\",\n  type: {\n    name: \"Composite\",\n    className: \"DetectedLanguage\",\n    modelProperties: {\n      detectedLanguage: {\n        serializedName: \"DetectedLanguage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      },\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageList: msRest.CompositeMapper = {\n  serializedName: \"ImageList\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageList\",\n    modelProperties: {\n      id: {\n        serializedName: \"Id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"Description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TermList: msRest.CompositeMapper = {\n  serializedName: \"TermList\",\n  type: {\n    name: \"Composite\",\n    className: \"TermList\",\n    modelProperties: {\n      id: {\n        serializedName: \"Id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"Description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RefreshIndex: msRest.CompositeMapper = {\n  serializedName: \"RefreshIndex\",\n  type: {\n    name: \"Composite\",\n    className: \"RefreshIndex\",\n    modelProperties: {\n      contentSourceId: {\n        serializedName: \"ContentSourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isUpdateSuccess: {\n        serializedName: \"IsUpdateSuccess\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      advancedInfo: {\n        serializedName: \"AdvancedInfo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: {\n                type: {\n                  name: \"String\"\n                }\n              }\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      },\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageAdditionalInfoItem: msRest.CompositeMapper = {\n  serializedName: \"Image_AdditionalInfoItem\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageAdditionalInfoItem\",\n    modelProperties: {\n      key: {\n        serializedName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Image: msRest.CompositeMapper = {\n  serializedName: \"Image\",\n  type: {\n    name: \"Composite\",\n    className: \"Image\",\n    modelProperties: {\n      contentId: {\n        serializedName: \"ContentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      additionalInfo: {\n        serializedName: \"AdditionalInfo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageAdditionalInfoItem\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      },\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageIds: msRest.CompositeMapper = {\n  serializedName: \"ImageIds\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageIds\",\n    modelProperties: {\n      contentSource: {\n        serializedName: \"ContentSource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentIds: {\n        serializedName: \"ContentIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      },\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TermsInList: msRest.CompositeMapper = {\n  serializedName: \"TermsInList\",\n  type: {\n    name: \"Composite\",\n    className: \"TermsInList\",\n    modelProperties: {\n      term: {\n        serializedName: \"Term\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TermsData: msRest.CompositeMapper = {\n  serializedName: \"TermsData\",\n  type: {\n    name: \"Composite\",\n    className: \"TermsData\",\n    modelProperties: {\n      language: {\n        serializedName: \"Language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      terms: {\n        serializedName: \"Terms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TermsInList\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"Composite\",\n          className: \"Status\"\n        }\n      },\n      trackingId: {\n        serializedName: \"TrackingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TermsPaging: msRest.CompositeMapper = {\n  serializedName: \"Terms_Paging\",\n  type: {\n    name: \"Composite\",\n    className: \"TermsPaging\",\n    modelProperties: {\n      total: {\n        serializedName: \"Total\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"Limit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      offset: {\n        serializedName: \"Offset\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      returned: {\n        serializedName: \"Returned\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Terms: msRest.CompositeMapper = {\n  serializedName: \"Terms\",\n  type: {\n    name: \"Composite\",\n    className: \"Terms\",\n    modelProperties: {\n      data: {\n        serializedName: \"Data\",\n        type: {\n          name: \"Composite\",\n          className: \"TermsData\"\n        }\n      },\n      paging: {\n        serializedName: \"Paging\",\n        type: {\n          name: \"Composite\",\n          className: \"TermsPaging\"\n        }\n      }\n    }\n  }\n};\n\nexport const Review: msRest.CompositeMapper = {\n  serializedName: \"Review\",\n  type: {\n    name: \"Composite\",\n    className: \"Review\",\n    modelProperties: {\n      reviewId: {\n        serializedName: \"ReviewId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subTeam: {\n        serializedName: \"SubTeam\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reviewerResultTags: {\n        serializedName: \"ReviewerResultTags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValuePair\"\n            }\n          }\n        }\n      },\n      createdBy: {\n        serializedName: \"CreatedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValuePair\"\n            }\n          }\n        }\n      },\n      type: {\n        serializedName: \"Type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      content: {\n        serializedName: \"Content\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentId: {\n        serializedName: \"ContentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callbackEndpoint: {\n        serializedName: \"CallbackEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobExecutionReportDetails: msRest.CompositeMapper = {\n  serializedName: \"JobExecutionReportDetails\",\n  type: {\n    name: \"Composite\",\n    className: \"JobExecutionReportDetails\",\n    modelProperties: {\n      ts: {\n        serializedName: \"Ts\",\n        type: {\n          name: \"String\"\n        }\n      },\n      msg: {\n        serializedName: \"Msg\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Job: msRest.CompositeMapper = {\n  serializedName: \"Job\",\n  type: {\n    name: \"Composite\",\n    className: \"Job\",\n    modelProperties: {\n      id: {\n        serializedName: \"Id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      teamName: {\n        serializedName: \"TeamName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"Status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workflowId: {\n        serializedName: \"WorkflowId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"Type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callBackEndpoint: {\n        serializedName: \"CallBackEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reviewId: {\n        serializedName: \"ReviewId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resultMetaData: {\n        serializedName: \"ResultMetaData\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyValuePair\"\n            }\n          }\n        }\n      },\n      jobExecutionReport: {\n        serializedName: \"JobExecutionReport\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobExecutionReportDetails\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobListResult: msRest.CompositeMapper = {\n  serializedName: \"JobListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"JobListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"Value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobId: msRest.CompositeMapper = {\n  serializedName: \"JobId\",\n  type: {\n    name: \"Composite\",\n    className: \"JobId\",\n    modelProperties: {\n      jobId: {\n        serializedName: \"JobId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        serializedName: \"Code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const APIError: msRest.CompositeMapper = {\n  serializedName: \"APIError\",\n  type: {\n    name: \"Composite\",\n    className: \"APIError\",\n    modelProperties: {\n      error: {\n        serializedName: \"Error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      }\n    }\n  }\n};\n\nexport const Body: msRest.CompositeMapper = {\n  serializedName: \"body\",\n  type: {\n    name: \"Composite\",\n    className: \"Body\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"Description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CreateReviewBodyItemMetadataItem: msRest.CompositeMapper = {\n  serializedName: \"createReviewBodyItem_MetadataItem\",\n  type: {\n    name: \"Composite\",\n    className: \"CreateReviewBodyItemMetadataItem\",\n    modelProperties: {\n      key: {\n        required: true,\n        serializedName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateReviewBodyItem: msRest.CompositeMapper = {\n  serializedName: \"createReviewBodyItem\",\n  type: {\n    name: \"Composite\",\n    className: \"CreateReviewBodyItem\",\n    modelProperties: {\n      type: {\n        required: true,\n        serializedName: \"Type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      content: {\n        required: true,\n        serializedName: \"Content\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentId: {\n        required: true,\n        serializedName: \"ContentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callbackEndpoint: {\n        serializedName: \"CallbackEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CreateReviewBodyItemMetadataItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Content: msRest.CompositeMapper = {\n  serializedName: \"Content\",\n  type: {\n    name: \"Composite\",\n    className: \"Content\",\n    modelProperties: {\n      contentValue: {\n        required: true,\n        serializedName: \"ContentValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TranscriptModerationBodyItemTermsItem: msRest.CompositeMapper = {\n  serializedName: \"transcriptModerationBodyItem_TermsItem\",\n  type: {\n    name: \"Composite\",\n    className: \"TranscriptModerationBodyItemTermsItem\",\n    modelProperties: {\n      index: {\n        required: true,\n        serializedName: \"Index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      term: {\n        required: true,\n        serializedName: \"Term\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TranscriptModerationBodyItem: msRest.CompositeMapper = {\n  serializedName: \"transcriptModerationBodyItem\",\n  type: {\n    name: \"Composite\",\n    className: \"TranscriptModerationBodyItem\",\n    modelProperties: {\n      timestamp: {\n        required: true,\n        serializedName: \"Timestamp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      terms: {\n        required: true,\n        serializedName: \"Terms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TranscriptModerationBodyItemTermsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageUrl: msRest.CompositeMapper = {\n  serializedName: \"ImageUrl\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageUrl\",\n    modelProperties: {\n      dataRepresentation: {\n        serializedName: \"DataRepresentation\",\n        defaultValue: 'URL',\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem: msRest.CompositeMapper = {\n  serializedName: \"CreateVideoReviewsBodyItem_VideoFramesItem_ReviewerResultTagsItem\",\n  type: {\n    name: \"Composite\",\n    className: \"CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem\",\n    modelProperties: {\n      key: {\n        required: true,\n        serializedName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateVideoReviewsBodyItemVideoFramesItemMetadataItem: msRest.CompositeMapper = {\n  serializedName: \"CreateVideoReviewsBodyItem_VideoFramesItem_MetadataItem\",\n  type: {\n    name: \"Composite\",\n    className: \"CreateVideoReviewsBodyItemVideoFramesItemMetadataItem\",\n    modelProperties: {\n      key: {\n        required: true,\n        serializedName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateVideoReviewsBodyItemVideoFramesItem: msRest.CompositeMapper = {\n  serializedName: \"CreateVideoReviewsBodyItem_VideoFramesItem\",\n  type: {\n    name: \"Composite\",\n    className: \"CreateVideoReviewsBodyItemVideoFramesItem\",\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: \"Id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timestamp: {\n        required: true,\n        serializedName: \"Timestamp\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      frameImage: {\n        required: true,\n        serializedName: \"FrameImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reviewerResultTags: {\n        serializedName: \"ReviewerResultTags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem\"\n            }\n          }\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CreateVideoReviewsBodyItemVideoFramesItemMetadataItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CreateVideoReviewsBodyItemMetadataItem: msRest.CompositeMapper = {\n  serializedName: \"CreateVideoReviewsBodyItem_MetadataItem\",\n  type: {\n    name: \"Composite\",\n    className: \"CreateVideoReviewsBodyItemMetadataItem\",\n    modelProperties: {\n      key: {\n        required: true,\n        serializedName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateVideoReviewsBodyItem: msRest.CompositeMapper = {\n  serializedName: \"CreateVideoReviewsBodyItem\",\n  type: {\n    name: \"Composite\",\n    className: \"CreateVideoReviewsBodyItem\",\n    modelProperties: {\n      videoFrames: {\n        serializedName: \"VideoFrames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CreateVideoReviewsBodyItemVideoFramesItem\"\n            }\n          }\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CreateVideoReviewsBodyItemMetadataItem\"\n            }\n          }\n        }\n      },\n      type: {\n        required: true,\n        isConstant: true,\n        serializedName: \"Type\",\n        defaultValue: 'Video',\n        type: {\n          name: \"String\"\n        }\n      },\n      content: {\n        required: true,\n        serializedName: \"Content\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentId: {\n        required: true,\n        serializedName: \"ContentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        required: true,\n        serializedName: \"Status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timescale: {\n        serializedName: \"Timescale\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      callbackEndpoint: {\n        serializedName: \"CallbackEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VideoFrameBodyItemReviewerResultTagsItem: msRest.CompositeMapper = {\n  serializedName: \"videoFrameBodyItem_ReviewerResultTagsItem\",\n  type: {\n    name: \"Composite\",\n    className: \"VideoFrameBodyItemReviewerResultTagsItem\",\n    modelProperties: {\n      key: {\n        required: true,\n        serializedName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VideoFrameBodyItemMetadataItem: msRest.CompositeMapper = {\n  serializedName: \"videoFrameBodyItem_MetadataItem\",\n  type: {\n    name: \"Composite\",\n    className: \"VideoFrameBodyItemMetadataItem\",\n    modelProperties: {\n      key: {\n        required: true,\n        serializedName: \"Key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VideoFrameBodyItem: msRest.CompositeMapper = {\n  serializedName: \"videoFrameBodyItem\",\n  type: {\n    name: \"Composite\",\n    className: \"VideoFrameBodyItem\",\n    modelProperties: {\n      timestamp: {\n        required: true,\n        serializedName: \"Timestamp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      frameImage: {\n        required: true,\n        serializedName: \"FrameImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reviewerResultTags: {\n        serializedName: \"ReviewerResultTags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VideoFrameBodyItemReviewerResultTagsItem\"\n            }\n          }\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VideoFrameBodyItemMetadataItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  APIError,\n  Candidate,\n  ErrorModel,\n  Evaluate,\n  Face,\n  FoundFaces,\n  ImageUrl,\n  KeyValuePair,\n  Match,\n  MatchResponse,\n  OCR,\n  Status\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const autocorrect: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"autocorrect\"\n  ],\n  mapper: {\n    serializedName: \"autocorrect\",\n    defaultValue: false,\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const cacheImage: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"cacheImage\"\n  ],\n  mapper: {\n    serializedName: \"CacheImage\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const callBackEndpoint: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"callBackEndpoint\"\n  ],\n  mapper: {\n    serializedName: \"CallBackEndpoint\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const classify: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"classify\"\n  ],\n  mapper: {\n    serializedName: \"classify\",\n    defaultValue: false,\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const contentId: msRest.OperationQueryParameter = {\n  parameterPath: \"contentId\",\n  mapper: {\n    required: true,\n    serializedName: \"ContentId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType0: msRest.OperationParameter = {\n  parameterPath: \"contentType\",\n  mapper: {\n    required: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType1: msRest.OperationQueryParameter = {\n  parameterPath: \"contentType\",\n  mapper: {\n    required: true,\n    serializedName: \"ContentType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType2: msRest.OperationParameter = {\n  parameterPath: \"contentType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    defaultValue: 'text/plain',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint: msRest.OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"Endpoint\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const enhanced: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"enhanced\"\n  ],\n  mapper: {\n    serializedName: \"enhanced\",\n    defaultValue: false,\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const filter: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"filter\"\n  ],\n  mapper: {\n    serializedName: \"filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const frameImageZip: msRest.OperationParameter = {\n  parameterPath: \"frameImageZip\",\n  mapper: {\n    required: true,\n    serializedName: \"frameImageZip\",\n    type: {\n      name: \"Stream\"\n    }\n  }\n};\nexport const frameMetadata: msRest.OperationParameter = {\n  parameterPath: \"frameMetadata\",\n  mapper: {\n    required: true,\n    serializedName: \"frameMetadata\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const imageId: msRest.OperationURLParameter = {\n  parameterPath: \"imageId\",\n  mapper: {\n    required: true,\n    serializedName: \"ImageId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const jobContentType: msRest.OperationParameter = {\n  parameterPath: \"jobContentType\",\n  mapper: {\n    required: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const jobId: msRest.OperationURLParameter = {\n  parameterPath: \"jobId\",\n  mapper: {\n    required: true,\n    serializedName: \"JobId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const label: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"label\"\n  ],\n  mapper: {\n    serializedName: \"label\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const language0: msRest.OperationQueryParameter = {\n  parameterPath: \"language\",\n  mapper: {\n    required: true,\n    serializedName: \"language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const language1: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"language\"\n  ],\n  mapper: {\n    serializedName: \"language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const limit: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"limit\"\n  ],\n  mapper: {\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const listId0: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"listId\"\n  ],\n  mapper: {\n    serializedName: \"listId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const listId1: msRest.OperationURLParameter = {\n  parameterPath: \"listId\",\n  mapper: {\n    required: true,\n    serializedName: \"listId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const noOfRecords: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"noOfRecords\"\n  ],\n  mapper: {\n    serializedName: \"noOfRecords\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const offset: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"offset\"\n  ],\n  mapper: {\n    serializedName: \"offset\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const pII: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"pII\"\n  ],\n  mapper: {\n    serializedName: \"PII\",\n    defaultValue: false,\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const reviewId: msRest.OperationURLParameter = {\n  parameterPath: \"reviewId\",\n  mapper: {\n    required: true,\n    serializedName: \"reviewId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const startSeed: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"startSeed\"\n  ],\n  mapper: {\n    serializedName: \"startSeed\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const subTeam: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"subTeam\"\n  ],\n  mapper: {\n    serializedName: \"subTeam\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tag: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"tag\"\n  ],\n  mapper: {\n    serializedName: \"tag\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const teamName: msRest.OperationURLParameter = {\n  parameterPath: \"teamName\",\n  mapper: {\n    required: true,\n    serializedName: \"teamName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const term: msRest.OperationURLParameter = {\n  parameterPath: \"term\",\n  mapper: {\n    required: true,\n    serializedName: \"term\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const textContentType: msRest.OperationParameter = {\n  parameterPath: \"textContentType\",\n  mapper: {\n    required: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const timescale: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"timescale\"\n  ],\n  mapper: {\n    serializedName: \"timescale\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const urlContentType: msRest.OperationParameter = {\n  parameterPath: \"urlContentType\",\n  mapper: {\n    required: true,\n    serializedName: \"UrlContentType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const workflowName: msRest.OperationQueryParameter = {\n  parameterPath: \"workflowName\",\n  mapper: {\n    required: true,\n    serializedName: \"WorkflowName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/imageModerationMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContentModeratorClientContext } from \"../contentModeratorClientContext\";\n\n/** Class representing a ImageModeration. */\nexport class ImageModeration {\n  private readonly client: ContentModeratorClientContext;\n\n  /**\n   * Create a ImageModeration.\n   * @param {ContentModeratorClientContext} client Reference to the service client.\n   */\n  constructor(client: ContentModeratorClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the list of faces found.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationFindFacesResponse>\n   */\n  findFaces(options?: Models.ImageModerationFindFacesOptionalParams): Promise<Models.ImageModerationFindFacesResponse>;\n  /**\n   * @param callback The callback\n   */\n  findFaces(callback: msRest.ServiceCallback<Models.FoundFaces>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  findFaces(options: Models.ImageModerationFindFacesOptionalParams, callback: msRest.ServiceCallback<Models.FoundFaces>): void;\n  findFaces(options?: Models.ImageModerationFindFacesOptionalParams | msRest.ServiceCallback<Models.FoundFaces>, callback?: msRest.ServiceCallback<Models.FoundFaces>): Promise<Models.ImageModerationFindFacesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      findFacesOperationSpec,\n      callback) as Promise<Models.ImageModerationFindFacesResponse>;\n  }\n\n  /**\n   * Returns any text found in the image for the language specified. If no language is specified in\n   * input then the detection defaults to English.\n   * @param language Language of the terms.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationOCRMethodResponse>\n   */\n  oCRMethod(language: string, options?: Models.ImageModerationOCRMethodOptionalParams): Promise<Models.ImageModerationOCRMethodResponse>;\n  /**\n   * @param language Language of the terms.\n   * @param callback The callback\n   */\n  oCRMethod(language: string, callback: msRest.ServiceCallback<Models.OCR>): void;\n  /**\n   * @param language Language of the terms.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  oCRMethod(language: string, options: Models.ImageModerationOCRMethodOptionalParams, callback: msRest.ServiceCallback<Models.OCR>): void;\n  oCRMethod(language: string, options?: Models.ImageModerationOCRMethodOptionalParams | msRest.ServiceCallback<Models.OCR>, callback?: msRest.ServiceCallback<Models.OCR>): Promise<Models.ImageModerationOCRMethodResponse> {\n    return this.client.sendOperationRequest(\n      {\n        language,\n        options\n      },\n      oCRMethodOperationSpec,\n      callback) as Promise<Models.ImageModerationOCRMethodResponse>;\n  }\n\n  /**\n   * Returns probabilities of the image containing racy or adult content.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationEvaluateMethodResponse>\n   */\n  evaluateMethod(options?: Models.ImageModerationEvaluateMethodOptionalParams): Promise<Models.ImageModerationEvaluateMethodResponse>;\n  /**\n   * @param callback The callback\n   */\n  evaluateMethod(callback: msRest.ServiceCallback<Models.Evaluate>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  evaluateMethod(options: Models.ImageModerationEvaluateMethodOptionalParams, callback: msRest.ServiceCallback<Models.Evaluate>): void;\n  evaluateMethod(options?: Models.ImageModerationEvaluateMethodOptionalParams | msRest.ServiceCallback<Models.Evaluate>, callback?: msRest.ServiceCallback<Models.Evaluate>): Promise<Models.ImageModerationEvaluateMethodResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      evaluateMethodOperationSpec,\n      callback) as Promise<Models.ImageModerationEvaluateMethodResponse>;\n  }\n\n  /**\n   * Fuzzily match an image against one of your custom Image Lists. You can create and manage your\n   * custom image lists using <a\n   * href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API.\n   *\n   * Returns ID and tags of matching image.<br/>\n   * <br/>\n   * Note: Refresh Index must be run on the corresponding Image List before additions and removals\n   * are reflected in the response.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationMatchMethodResponse>\n   */\n  matchMethod(options?: Models.ImageModerationMatchMethodOptionalParams): Promise<Models.ImageModerationMatchMethodResponse>;\n  /**\n   * @param callback The callback\n   */\n  matchMethod(callback: msRest.ServiceCallback<Models.MatchResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  matchMethod(options: Models.ImageModerationMatchMethodOptionalParams, callback: msRest.ServiceCallback<Models.MatchResponse>): void;\n  matchMethod(options?: Models.ImageModerationMatchMethodOptionalParams | msRest.ServiceCallback<Models.MatchResponse>, callback?: msRest.ServiceCallback<Models.MatchResponse>): Promise<Models.ImageModerationMatchMethodResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      matchMethodOperationSpec,\n      callback) as Promise<Models.ImageModerationMatchMethodResponse>;\n  }\n\n  /**\n   * Returns the list of faces found.\n   * @param imageStream The image file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationFindFacesFileInputResponse>\n   */\n  findFacesFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationFindFacesFileInputOptionalParams): Promise<Models.ImageModerationFindFacesFileInputResponse>;\n  /**\n   * @param imageStream The image file.\n   * @param callback The callback\n   */\n  findFacesFileInput(imageStream: msRest.HttpRequestBody, callback: msRest.ServiceCallback<Models.FoundFaces>): void;\n  /**\n   * @param imageStream The image file.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  findFacesFileInput(imageStream: msRest.HttpRequestBody, options: Models.ImageModerationFindFacesFileInputOptionalParams, callback: msRest.ServiceCallback<Models.FoundFaces>): void;\n  findFacesFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationFindFacesFileInputOptionalParams | msRest.ServiceCallback<Models.FoundFaces>, callback?: msRest.ServiceCallback<Models.FoundFaces>): Promise<Models.ImageModerationFindFacesFileInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        imageStream,\n        options\n      },\n      findFacesFileInputOperationSpec,\n      callback) as Promise<Models.ImageModerationFindFacesFileInputResponse>;\n  }\n\n  /**\n   * Returns the list of faces found.\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationFindFacesUrlInputResponse>\n   */\n  findFacesUrlInput(contentType: string, imageUrl: Models.ImageUrl, options?: Models.ImageModerationFindFacesUrlInputOptionalParams): Promise<Models.ImageModerationFindFacesUrlInputResponse>;\n  /**\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param callback The callback\n   */\n  findFacesUrlInput(contentType: string, imageUrl: Models.ImageUrl, callback: msRest.ServiceCallback<Models.FoundFaces>): void;\n  /**\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  findFacesUrlInput(contentType: string, imageUrl: Models.ImageUrl, options: Models.ImageModerationFindFacesUrlInputOptionalParams, callback: msRest.ServiceCallback<Models.FoundFaces>): void;\n  findFacesUrlInput(contentType: string, imageUrl: Models.ImageUrl, options?: Models.ImageModerationFindFacesUrlInputOptionalParams | msRest.ServiceCallback<Models.FoundFaces>, callback?: msRest.ServiceCallback<Models.FoundFaces>): Promise<Models.ImageModerationFindFacesUrlInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentType,\n        imageUrl,\n        options\n      },\n      findFacesUrlInputOperationSpec,\n      callback) as Promise<Models.ImageModerationFindFacesUrlInputResponse>;\n  }\n\n  /**\n   * Returns any text found in the image for the language specified. If no language is specified in\n   * input then the detection defaults to English.\n   * @param language Language of the terms.\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationOCRUrlInputResponse>\n   */\n  oCRUrlInput(language: string, contentType: string, imageUrl: Models.ImageUrl, options?: Models.ImageModerationOCRUrlInputOptionalParams): Promise<Models.ImageModerationOCRUrlInputResponse>;\n  /**\n   * @param language Language of the terms.\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param callback The callback\n   */\n  oCRUrlInput(language: string, contentType: string, imageUrl: Models.ImageUrl, callback: msRest.ServiceCallback<Models.OCR>): void;\n  /**\n   * @param language Language of the terms.\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  oCRUrlInput(language: string, contentType: string, imageUrl: Models.ImageUrl, options: Models.ImageModerationOCRUrlInputOptionalParams, callback: msRest.ServiceCallback<Models.OCR>): void;\n  oCRUrlInput(language: string, contentType: string, imageUrl: Models.ImageUrl, options?: Models.ImageModerationOCRUrlInputOptionalParams | msRest.ServiceCallback<Models.OCR>, callback?: msRest.ServiceCallback<Models.OCR>): Promise<Models.ImageModerationOCRUrlInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        language,\n        contentType,\n        imageUrl,\n        options\n      },\n      oCRUrlInputOperationSpec,\n      callback) as Promise<Models.ImageModerationOCRUrlInputResponse>;\n  }\n\n  /**\n   * Returns any text found in the image for the language specified. If no language is specified in\n   * input then the detection defaults to English.\n   * @param language Language of the terms.\n   * @param imageStream The image file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationOCRFileInputResponse>\n   */\n  oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationOCRFileInputOptionalParams): Promise<Models.ImageModerationOCRFileInputResponse>;\n  /**\n   * @param language Language of the terms.\n   * @param imageStream The image file.\n   * @param callback The callback\n   */\n  oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, callback: msRest.ServiceCallback<Models.OCR>): void;\n  /**\n   * @param language Language of the terms.\n   * @param imageStream The image file.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, options: Models.ImageModerationOCRFileInputOptionalParams, callback: msRest.ServiceCallback<Models.OCR>): void;\n  oCRFileInput(language: string, imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationOCRFileInputOptionalParams | msRest.ServiceCallback<Models.OCR>, callback?: msRest.ServiceCallback<Models.OCR>): Promise<Models.ImageModerationOCRFileInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        language,\n        imageStream,\n        options\n      },\n      oCRFileInputOperationSpec,\n      callback) as Promise<Models.ImageModerationOCRFileInputResponse>;\n  }\n\n  /**\n   * Returns probabilities of the image containing racy or adult content.\n   * @param imageStream The image file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationEvaluateFileInputResponse>\n   */\n  evaluateFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationEvaluateFileInputOptionalParams): Promise<Models.ImageModerationEvaluateFileInputResponse>;\n  /**\n   * @param imageStream The image file.\n   * @param callback The callback\n   */\n  evaluateFileInput(imageStream: msRest.HttpRequestBody, callback: msRest.ServiceCallback<Models.Evaluate>): void;\n  /**\n   * @param imageStream The image file.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  evaluateFileInput(imageStream: msRest.HttpRequestBody, options: Models.ImageModerationEvaluateFileInputOptionalParams, callback: msRest.ServiceCallback<Models.Evaluate>): void;\n  evaluateFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationEvaluateFileInputOptionalParams | msRest.ServiceCallback<Models.Evaluate>, callback?: msRest.ServiceCallback<Models.Evaluate>): Promise<Models.ImageModerationEvaluateFileInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        imageStream,\n        options\n      },\n      evaluateFileInputOperationSpec,\n      callback) as Promise<Models.ImageModerationEvaluateFileInputResponse>;\n  }\n\n  /**\n   * Returns probabilities of the image containing racy or adult content.\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationEvaluateUrlInputResponse>\n   */\n  evaluateUrlInput(contentType: string, imageUrl: Models.ImageUrl, options?: Models.ImageModerationEvaluateUrlInputOptionalParams): Promise<Models.ImageModerationEvaluateUrlInputResponse>;\n  /**\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param callback The callback\n   */\n  evaluateUrlInput(contentType: string, imageUrl: Models.ImageUrl, callback: msRest.ServiceCallback<Models.Evaluate>): void;\n  /**\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  evaluateUrlInput(contentType: string, imageUrl: Models.ImageUrl, options: Models.ImageModerationEvaluateUrlInputOptionalParams, callback: msRest.ServiceCallback<Models.Evaluate>): void;\n  evaluateUrlInput(contentType: string, imageUrl: Models.ImageUrl, options?: Models.ImageModerationEvaluateUrlInputOptionalParams | msRest.ServiceCallback<Models.Evaluate>, callback?: msRest.ServiceCallback<Models.Evaluate>): Promise<Models.ImageModerationEvaluateUrlInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentType,\n        imageUrl,\n        options\n      },\n      evaluateUrlInputOperationSpec,\n      callback) as Promise<Models.ImageModerationEvaluateUrlInputResponse>;\n  }\n\n  /**\n   * Fuzzily match an image against one of your custom Image Lists. You can create and manage your\n   * custom image lists using <a\n   * href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API.\n   *\n   * Returns ID and tags of matching image.<br/>\n   * <br/>\n   * Note: Refresh Index must be run on the corresponding Image List before additions and removals\n   * are reflected in the response.\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationMatchUrlInputResponse>\n   */\n  matchUrlInput(contentType: string, imageUrl: Models.ImageUrl, options?: Models.ImageModerationMatchUrlInputOptionalParams): Promise<Models.ImageModerationMatchUrlInputResponse>;\n  /**\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param callback The callback\n   */\n  matchUrlInput(contentType: string, imageUrl: Models.ImageUrl, callback: msRest.ServiceCallback<Models.MatchResponse>): void;\n  /**\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  matchUrlInput(contentType: string, imageUrl: Models.ImageUrl, options: Models.ImageModerationMatchUrlInputOptionalParams, callback: msRest.ServiceCallback<Models.MatchResponse>): void;\n  matchUrlInput(contentType: string, imageUrl: Models.ImageUrl, options?: Models.ImageModerationMatchUrlInputOptionalParams | msRest.ServiceCallback<Models.MatchResponse>, callback?: msRest.ServiceCallback<Models.MatchResponse>): Promise<Models.ImageModerationMatchUrlInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentType,\n        imageUrl,\n        options\n      },\n      matchUrlInputOperationSpec,\n      callback) as Promise<Models.ImageModerationMatchUrlInputResponse>;\n  }\n\n  /**\n   * Fuzzily match an image against one of your custom Image Lists. You can create and manage your\n   * custom image lists using <a\n   * href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API.\n   *\n   * Returns ID and tags of matching image.<br/>\n   * <br/>\n   * Note: Refresh Index must be run on the corresponding Image List before additions and removals\n   * are reflected in the response.\n   * @param imageStream The image file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImageModerationMatchFileInputResponse>\n   */\n  matchFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationMatchFileInputOptionalParams): Promise<Models.ImageModerationMatchFileInputResponse>;\n  /**\n   * @param imageStream The image file.\n   * @param callback The callback\n   */\n  matchFileInput(imageStream: msRest.HttpRequestBody, callback: msRest.ServiceCallback<Models.MatchResponse>): void;\n  /**\n   * @param imageStream The image file.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  matchFileInput(imageStream: msRest.HttpRequestBody, options: Models.ImageModerationMatchFileInputOptionalParams, callback: msRest.ServiceCallback<Models.MatchResponse>): void;\n  matchFileInput(imageStream: msRest.HttpRequestBody, options?: Models.ImageModerationMatchFileInputOptionalParams | msRest.ServiceCallback<Models.MatchResponse>, callback?: msRest.ServiceCallback<Models.MatchResponse>): Promise<Models.ImageModerationMatchFileInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        imageStream,\n        options\n      },\n      matchFileInputOperationSpec,\n      callback) as Promise<Models.ImageModerationMatchFileInputResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst findFacesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/FindFaces\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.cacheImage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.FoundFaces\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst oCRMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/OCR\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.language0,\n    Parameters.cacheImage,\n    Parameters.enhanced\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OCR\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst evaluateMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/Evaluate\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.cacheImage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Evaluate\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst matchMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/Match\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.listId0,\n    Parameters.cacheImage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.MatchResponse\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst findFacesFileInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/FindFaces\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.cacheImage\n  ],\n  requestBody: {\n    parameterPath: \"imageStream\",\n    mapper: {\n      required: true,\n      serializedName: \"ImageStream\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"image/gif\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FoundFaces\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst findFacesUrlInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/FindFaces\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.cacheImage\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"imageUrl\",\n    mapper: {\n      ...Mappers.ImageUrl,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.FoundFaces\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst oCRUrlInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/OCR\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.language0,\n    Parameters.cacheImage,\n    Parameters.enhanced\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"imageUrl\",\n    mapper: {\n      ...Mappers.ImageUrl,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.OCR\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst oCRFileInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/OCR\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.language0,\n    Parameters.cacheImage,\n    Parameters.enhanced\n  ],\n  requestBody: {\n    parameterPath: \"imageStream\",\n    mapper: {\n      required: true,\n      serializedName: \"ImageStream\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"image/gif\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OCR\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst evaluateFileInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/Evaluate\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.cacheImage\n  ],\n  requestBody: {\n    parameterPath: \"imageStream\",\n    mapper: {\n      required: true,\n      serializedName: \"ImageStream\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"image/gif\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Evaluate\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst evaluateUrlInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/Evaluate\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.cacheImage\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"imageUrl\",\n    mapper: {\n      ...Mappers.ImageUrl,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.Evaluate\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst matchUrlInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/Match\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.listId0,\n    Parameters.cacheImage\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"imageUrl\",\n    mapper: {\n      ...Mappers.ImageUrl,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.MatchResponse\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst matchFileInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessImage/Match\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.listId0,\n    Parameters.cacheImage\n  ],\n  requestBody: {\n    parameterPath: \"imageStream\",\n    mapper: {\n      required: true,\n      serializedName: \"ImageStream\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"image/gif\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MatchResponse\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Address,\n  APIError,\n  Classification,\n  ClassificationCategory1,\n  ClassificationCategory2,\n  ClassificationCategory3,\n  DetectedLanguage,\n  DetectedTerms,\n  Email,\n  ErrorModel,\n  IPA,\n  Phone,\n  PII,\n  Screen,\n  SSN,\n  Status\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/textModerationMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContentModeratorClientContext } from \"../contentModeratorClientContext\";\n\n/** Class representing a TextModeration. */\nexport class TextModeration {\n  private readonly client: ContentModeratorClientContext;\n\n  /**\n   * Create a TextModeration.\n   * @param {ContentModeratorClientContext} client Reference to the service client.\n   */\n  constructor(client: ContentModeratorClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Detects profanity in more than 100 languages and match against custom and shared blacklists.\n   * @summary Detect profanity and match against custom and shared blacklists\n   * @param textContentType The content type. Possible values include: 'text/plain', 'text/html',\n   * 'text/xml', 'text/markdown'\n   * @param textContent Content to screen.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TextModerationScreenTextResponse>\n   */\n  screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, options?: Models.TextModerationScreenTextOptionalParams): Promise<Models.TextModerationScreenTextResponse>;\n  /**\n   * @param textContentType The content type. Possible values include: 'text/plain', 'text/html',\n   * 'text/xml', 'text/markdown'\n   * @param textContent Content to screen.\n   * @param callback The callback\n   */\n  screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, callback: msRest.ServiceCallback<Models.Screen>): void;\n  /**\n   * @param textContentType The content type. Possible values include: 'text/plain', 'text/html',\n   * 'text/xml', 'text/markdown'\n   * @param textContent Content to screen.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, options: Models.TextModerationScreenTextOptionalParams, callback: msRest.ServiceCallback<Models.Screen>): void;\n  screenText(textContentType: Models.TextContentType, textContent: msRest.HttpRequestBody, options?: Models.TextModerationScreenTextOptionalParams | msRest.ServiceCallback<Models.Screen>, callback?: msRest.ServiceCallback<Models.Screen>): Promise<Models.TextModerationScreenTextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        textContentType,\n        textContent,\n        options\n      },\n      screenTextOperationSpec,\n      callback) as Promise<Models.TextModerationScreenTextResponse>;\n  }\n\n  /**\n   * This operation will detect the language of given input content. Returns the <a\n   * href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a> for the predominant language\n   * comprising the submitted text. Over 110 languages supported.\n   * @param textContentType The content type. Possible values include: 'text/plain', 'text/html',\n   * 'text/xml', 'text/markdown'\n   * @param textContent Content to screen.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.TextModerationDetectLanguageResponse>\n   */\n  detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase): Promise<Models.TextModerationDetectLanguageResponse>;\n  /**\n   * @param textContentType The content type. Possible values include: 'text/plain', 'text/html',\n   * 'text/xml', 'text/markdown'\n   * @param textContent Content to screen.\n   * @param callback The callback\n   */\n  detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, callback: msRest.ServiceCallback<Models.DetectedLanguage>): void;\n  /**\n   * @param textContentType The content type. Possible values include: 'text/plain', 'text/html',\n   * 'text/xml', 'text/markdown'\n   * @param textContent Content to screen.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DetectedLanguage>): void;\n  detectLanguage(textContentType: Models.TextContentType1, textContent: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.DetectedLanguage>, callback?: msRest.ServiceCallback<Models.DetectedLanguage>): Promise<Models.TextModerationDetectLanguageResponse> {\n    return this.client.sendOperationRequest(\n      {\n        textContentType,\n        textContent,\n        options\n      },\n      detectLanguageOperationSpec,\n      callback) as Promise<Models.TextModerationDetectLanguageResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst screenTextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessText/Screen/\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.language1,\n    Parameters.autocorrect,\n    Parameters.pII,\n    Parameters.listId0,\n    Parameters.classify\n  ],\n  headerParameters: [\n    Parameters.textContentType\n  ],\n  requestBody: {\n    parameterPath: \"textContent\",\n    mapper: {\n      required: true,\n      serializedName: \"Text Content\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"text/plain\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Screen\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst detectLanguageOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/moderate/v1.0/ProcessText/DetectLanguage\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  headerParameters: [\n    Parameters.textContentType\n  ],\n  requestBody: {\n    parameterPath: \"textContent\",\n    mapper: {\n      required: true,\n      serializedName: \"Text Content\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"text/plain\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DetectedLanguage\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  APIError,\n  Body,\n  ErrorModel,\n  ImageList,\n  RefreshIndex,\n  Status\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/listManagementImageListsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContentModeratorClientContext } from \"../contentModeratorClientContext\";\n\n/** Class representing a ListManagementImageLists. */\nexport class ListManagementImageLists {\n  private readonly client: ContentModeratorClientContext;\n\n  /**\n   * Create a ListManagementImageLists.\n   * @param {ContentModeratorClientContext} client Reference to the service client.\n   */\n  constructor(client: ContentModeratorClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the details of the image list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageListsGetDetailsResponse>\n   */\n  getDetails(listId: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementImageListsGetDetailsResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param callback The callback\n   */\n  getDetails(listId: string, callback: msRest.ServiceCallback<Models.ImageList>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getDetails(listId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ImageList>): void;\n  getDetails(listId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ImageList>, callback?: msRest.ServiceCallback<Models.ImageList>): Promise<Models.ListManagementImageListsGetDetailsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        options\n      },\n      getDetailsOperationSpec,\n      callback) as Promise<Models.ListManagementImageListsGetDetailsResponse>;\n  }\n\n  /**\n   * Deletes image list with the list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageListsDeleteMethodResponse>\n   */\n  deleteMethod(listId: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementImageListsDeleteMethodResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param callback The callback\n   */\n  deleteMethod(listId: string, callback: msRest.ServiceCallback<string>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(listId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<string>): void;\n  deleteMethod(listId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<string>, callback?: msRest.ServiceCallback<string>): Promise<Models.ListManagementImageListsDeleteMethodResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.ListManagementImageListsDeleteMethodResponse>;\n  }\n\n  /**\n   * Updates an image list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageListsUpdateResponse>\n   */\n  update(listId: string, contentType: string, body: Models.Body, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementImageListsUpdateResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param callback The callback\n   */\n  update(listId: string, contentType: string, body: Models.Body, callback: msRest.ServiceCallback<Models.ImageList>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(listId: string, contentType: string, body: Models.Body, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ImageList>): void;\n  update(listId: string, contentType: string, body: Models.Body, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ImageList>, callback?: msRest.ServiceCallback<Models.ImageList>): Promise<Models.ListManagementImageListsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        contentType,\n        body,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.ListManagementImageListsUpdateResponse>;\n  }\n\n  /**\n   * Creates an image list.\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageListsCreateResponse>\n   */\n  create(contentType: string, body: Models.Body, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementImageListsCreateResponse>;\n  /**\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param callback The callback\n   */\n  create(contentType: string, body: Models.Body, callback: msRest.ServiceCallback<Models.ImageList>): void;\n  /**\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(contentType: string, body: Models.Body, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ImageList>): void;\n  create(contentType: string, body: Models.Body, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ImageList>, callback?: msRest.ServiceCallback<Models.ImageList>): Promise<Models.ListManagementImageListsCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentType,\n        body,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.ListManagementImageListsCreateResponse>;\n  }\n\n  /**\n   * Gets all the Image Lists.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageListsGetAllImageListsResponse>\n   */\n  getAllImageLists(options?: msRest.RequestOptionsBase): Promise<Models.ListManagementImageListsGetAllImageListsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAllImageLists(callback: msRest.ServiceCallback<Models.ImageList[]>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAllImageLists(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ImageList[]>): void;\n  getAllImageLists(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ImageList[]>, callback?: msRest.ServiceCallback<Models.ImageList[]>): Promise<Models.ListManagementImageListsGetAllImageListsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAllImageListsOperationSpec,\n      callback) as Promise<Models.ListManagementImageListsGetAllImageListsResponse>;\n  }\n\n  /**\n   * Refreshes the index of the list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageListsRefreshIndexMethodResponse>\n   */\n  refreshIndexMethod(listId: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementImageListsRefreshIndexMethodResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param callback The callback\n   */\n  refreshIndexMethod(listId: string, callback: msRest.ServiceCallback<Models.RefreshIndex>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  refreshIndexMethod(listId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RefreshIndex>): void;\n  refreshIndexMethod(listId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.RefreshIndex>, callback?: msRest.ServiceCallback<Models.RefreshIndex>): Promise<Models.ListManagementImageListsRefreshIndexMethodResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        options\n      },\n      refreshIndexMethodOperationSpec,\n      callback) as Promise<Models.ListManagementImageListsRefreshIndexMethodResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getDetailsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageList\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.Body,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageList\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/lists/v1.0/imagelists\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.Body,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageList\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst getAllImageListsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"contentmoderator/lists/v1.0/imagelists\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageList\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst refreshIndexMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}/RefreshIndex\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.RefreshIndex\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  APIError,\n  Body,\n  ErrorModel,\n  RefreshIndex,\n  Status,\n  TermList\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/listManagementTermListsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContentModeratorClientContext } from \"../contentModeratorClientContext\";\n\n/** Class representing a ListManagementTermLists. */\nexport class ListManagementTermLists {\n  private readonly client: ContentModeratorClientContext;\n\n  /**\n   * Create a ListManagementTermLists.\n   * @param {ContentModeratorClientContext} client Reference to the service client.\n   */\n  constructor(client: ContentModeratorClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns list Id details of the term list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementTermListsGetDetailsResponse>\n   */\n  getDetails(listId: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementTermListsGetDetailsResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param callback The callback\n   */\n  getDetails(listId: string, callback: msRest.ServiceCallback<Models.TermList>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getDetails(listId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TermList>): void;\n  getDetails(listId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TermList>, callback?: msRest.ServiceCallback<Models.TermList>): Promise<Models.ListManagementTermListsGetDetailsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        options\n      },\n      getDetailsOperationSpec,\n      callback) as Promise<Models.ListManagementTermListsGetDetailsResponse>;\n  }\n\n  /**\n   * Deletes term list with the list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementTermListsDeleteMethodResponse>\n   */\n  deleteMethod(listId: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementTermListsDeleteMethodResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param callback The callback\n   */\n  deleteMethod(listId: string, callback: msRest.ServiceCallback<string>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(listId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<string>): void;\n  deleteMethod(listId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<string>, callback?: msRest.ServiceCallback<string>): Promise<Models.ListManagementTermListsDeleteMethodResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.ListManagementTermListsDeleteMethodResponse>;\n  }\n\n  /**\n   * Updates an Term List.\n   * @param listId List Id of the image list.\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementTermListsUpdateResponse>\n   */\n  update(listId: string, contentType: string, body: Models.Body, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementTermListsUpdateResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param callback The callback\n   */\n  update(listId: string, contentType: string, body: Models.Body, callback: msRest.ServiceCallback<Models.TermList>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(listId: string, contentType: string, body: Models.Body, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TermList>): void;\n  update(listId: string, contentType: string, body: Models.Body, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TermList>, callback?: msRest.ServiceCallback<Models.TermList>): Promise<Models.ListManagementTermListsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        contentType,\n        body,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.ListManagementTermListsUpdateResponse>;\n  }\n\n  /**\n   * Creates a Term List\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementTermListsCreateResponse>\n   */\n  create(contentType: string, body: Models.Body, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementTermListsCreateResponse>;\n  /**\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param callback The callback\n   */\n  create(contentType: string, body: Models.Body, callback: msRest.ServiceCallback<Models.TermList>): void;\n  /**\n   * @param contentType The content type.\n   * @param body Schema of the body.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(contentType: string, body: Models.Body, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TermList>): void;\n  create(contentType: string, body: Models.Body, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TermList>, callback?: msRest.ServiceCallback<Models.TermList>): Promise<Models.ListManagementTermListsCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentType,\n        body,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.ListManagementTermListsCreateResponse>;\n  }\n\n  /**\n   * gets all the Term Lists\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementTermListsGetAllTermListsResponse>\n   */\n  getAllTermLists(options?: msRest.RequestOptionsBase): Promise<Models.ListManagementTermListsGetAllTermListsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAllTermLists(callback: msRest.ServiceCallback<Models.TermList[]>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAllTermLists(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TermList[]>): void;\n  getAllTermLists(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.TermList[]>, callback?: msRest.ServiceCallback<Models.TermList[]>): Promise<Models.ListManagementTermListsGetAllTermListsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAllTermListsOperationSpec,\n      callback) as Promise<Models.ListManagementTermListsGetAllTermListsResponse>;\n  }\n\n  /**\n   * Refreshes the index of the list with list Id equal to list ID passed.\n   * @param listId List Id of the image list.\n   * @param language Language of the terms.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementTermListsRefreshIndexMethodResponse>\n   */\n  refreshIndexMethod(listId: string, language: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementTermListsRefreshIndexMethodResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param language Language of the terms.\n   * @param callback The callback\n   */\n  refreshIndexMethod(listId: string, language: string, callback: msRest.ServiceCallback<Models.RefreshIndex>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param language Language of the terms.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  refreshIndexMethod(listId: string, language: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.RefreshIndex>): void;\n  refreshIndexMethod(listId: string, language: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.RefreshIndex>, callback?: msRest.ServiceCallback<Models.RefreshIndex>): Promise<Models.ListManagementTermListsRefreshIndexMethodResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        language,\n        options\n      },\n      refreshIndexMethodOperationSpec,\n      callback) as Promise<Models.ListManagementTermListsRefreshIndexMethodResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getDetailsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"contentmoderator/lists/v1.0/termlists/{listId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.TermList\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"contentmoderator/lists/v1.0/termlists/{listId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"contentmoderator/lists/v1.0/termlists/{listId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.Body,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.TermList\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/lists/v1.0/termlists\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      ...Mappers.Body,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.TermList\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst getAllTermListsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"contentmoderator/lists/v1.0/termlists\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TermList\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst refreshIndexMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/lists/v1.0/termlists/{listId}/RefreshIndex\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  queryParameters: [\n    Parameters.language0\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.RefreshIndex\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  APIError,\n  ErrorModel,\n  Image,\n  ImageAdditionalInfoItem,\n  ImageIds,\n  ImageUrl,\n  Status\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/listManagementImageMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContentModeratorClientContext } from \"../contentModeratorClientContext\";\n\n/** Class representing a ListManagementImage. */\nexport class ListManagementImage {\n  private readonly client: ContentModeratorClientContext;\n\n  /**\n   * Create a ListManagementImage.\n   * @param {ContentModeratorClientContext} client Reference to the service client.\n   */\n  constructor(client: ContentModeratorClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Add an image to the list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageAddImageResponse>\n   */\n  addImage(listId: string, options?: Models.ListManagementImageAddImageOptionalParams): Promise<Models.ListManagementImageAddImageResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param callback The callback\n   */\n  addImage(listId: string, callback: msRest.ServiceCallback<Models.Image>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  addImage(listId: string, options: Models.ListManagementImageAddImageOptionalParams, callback: msRest.ServiceCallback<Models.Image>): void;\n  addImage(listId: string, options?: Models.ListManagementImageAddImageOptionalParams | msRest.ServiceCallback<Models.Image>, callback?: msRest.ServiceCallback<Models.Image>): Promise<Models.ListManagementImageAddImageResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        options\n      },\n      addImageOperationSpec,\n      callback) as Promise<Models.ListManagementImageAddImageResponse>;\n  }\n\n  /**\n   * Deletes all images from the list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageDeleteAllImagesResponse>\n   */\n  deleteAllImages(listId: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementImageDeleteAllImagesResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param callback The callback\n   */\n  deleteAllImages(listId: string, callback: msRest.ServiceCallback<string>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteAllImages(listId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<string>): void;\n  deleteAllImages(listId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<string>, callback?: msRest.ServiceCallback<string>): Promise<Models.ListManagementImageDeleteAllImagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        options\n      },\n      deleteAllImagesOperationSpec,\n      callback) as Promise<Models.ListManagementImageDeleteAllImagesResponse>;\n  }\n\n  /**\n   * Gets all image Ids from the list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageGetAllImageIdsResponse>\n   */\n  getAllImageIds(listId: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementImageGetAllImageIdsResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param callback The callback\n   */\n  getAllImageIds(listId: string, callback: msRest.ServiceCallback<Models.ImageIds>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAllImageIds(listId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ImageIds>): void;\n  getAllImageIds(listId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ImageIds>, callback?: msRest.ServiceCallback<Models.ImageIds>): Promise<Models.ListManagementImageGetAllImageIdsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        options\n      },\n      getAllImageIdsOperationSpec,\n      callback) as Promise<Models.ListManagementImageGetAllImageIdsResponse>;\n  }\n\n  /**\n   * Deletes an image from the list with list Id and image Id passed.\n   * @param listId List Id of the image list.\n   * @param imageId Id of the image.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageDeleteImageResponse>\n   */\n  deleteImage(listId: string, imageId: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementImageDeleteImageResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param imageId Id of the image.\n   * @param callback The callback\n   */\n  deleteImage(listId: string, imageId: string, callback: msRest.ServiceCallback<string>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param imageId Id of the image.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteImage(listId: string, imageId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<string>): void;\n  deleteImage(listId: string, imageId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<string>, callback?: msRest.ServiceCallback<string>): Promise<Models.ListManagementImageDeleteImageResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        imageId,\n        options\n      },\n      deleteImageOperationSpec,\n      callback) as Promise<Models.ListManagementImageDeleteImageResponse>;\n  }\n\n  /**\n   * Add an image to the list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageAddImageUrlInputResponse>\n   */\n  addImageUrlInput(listId: string, contentType: string, imageUrl: Models.ImageUrl, options?: Models.ListManagementImageAddImageUrlInputOptionalParams): Promise<Models.ListManagementImageAddImageUrlInputResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param callback The callback\n   */\n  addImageUrlInput(listId: string, contentType: string, imageUrl: Models.ImageUrl, callback: msRest.ServiceCallback<Models.Image>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param contentType The content type.\n   * @param imageUrl The image url.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  addImageUrlInput(listId: string, contentType: string, imageUrl: Models.ImageUrl, options: Models.ListManagementImageAddImageUrlInputOptionalParams, callback: msRest.ServiceCallback<Models.Image>): void;\n  addImageUrlInput(listId: string, contentType: string, imageUrl: Models.ImageUrl, options?: Models.ListManagementImageAddImageUrlInputOptionalParams | msRest.ServiceCallback<Models.Image>, callback?: msRest.ServiceCallback<Models.Image>): Promise<Models.ListManagementImageAddImageUrlInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        contentType,\n        imageUrl,\n        options\n      },\n      addImageUrlInputOperationSpec,\n      callback) as Promise<Models.ListManagementImageAddImageUrlInputResponse>;\n  }\n\n  /**\n   * Add an image to the list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param imageStream The image file.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementImageAddImageFileInputResponse>\n   */\n  addImageFileInput(listId: string, imageStream: msRest.HttpRequestBody, options?: Models.ListManagementImageAddImageFileInputOptionalParams): Promise<Models.ListManagementImageAddImageFileInputResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param imageStream The image file.\n   * @param callback The callback\n   */\n  addImageFileInput(listId: string, imageStream: msRest.HttpRequestBody, callback: msRest.ServiceCallback<Models.Image>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param imageStream The image file.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  addImageFileInput(listId: string, imageStream: msRest.HttpRequestBody, options: Models.ListManagementImageAddImageFileInputOptionalParams, callback: msRest.ServiceCallback<Models.Image>): void;\n  addImageFileInput(listId: string, imageStream: msRest.HttpRequestBody, options?: Models.ListManagementImageAddImageFileInputOptionalParams | msRest.ServiceCallback<Models.Image>, callback?: msRest.ServiceCallback<Models.Image>): Promise<Models.ListManagementImageAddImageFileInputResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        imageStream,\n        options\n      },\n      addImageFileInputOperationSpec,\n      callback) as Promise<Models.ListManagementImageAddImageFileInputResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst addImageOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}/images\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  queryParameters: [\n    Parameters.tag,\n    Parameters.label\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Image\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst deleteAllImagesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}/images\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst getAllImageIdsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}/images\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageIds\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst deleteImageOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}/images/{ImageId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1,\n    Parameters.imageId\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst addImageUrlInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}/images\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  queryParameters: [\n    Parameters.tag,\n    Parameters.label\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"imageUrl\",\n    mapper: {\n      ...Mappers.ImageUrl,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.Image\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst addImageFileInputOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/lists/v1.0/imagelists/{listId}/images\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  queryParameters: [\n    Parameters.tag,\n    Parameters.label\n  ],\n  requestBody: {\n    parameterPath: \"imageStream\",\n    mapper: {\n      required: true,\n      serializedName: \"ImageStream\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"image/gif\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Image\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  APIError,\n  ErrorModel,\n  Status,\n  Terms,\n  TermsData,\n  TermsInList,\n  TermsPaging\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/listManagementTermMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContentModeratorClientContext } from \"../contentModeratorClientContext\";\n\n/** Class representing a ListManagementTerm. */\nexport class ListManagementTerm {\n  private readonly client: ContentModeratorClientContext;\n\n  /**\n   * Create a ListManagementTerm.\n   * @param {ContentModeratorClientContext} client Reference to the service client.\n   */\n  constructor(client: ContentModeratorClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Add a term to the term list with list Id equal to list Id passed.\n   * @param listId List Id of the image list.\n   * @param term Term to be deleted\n   * @param language Language of the terms.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  addTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param term Term to be deleted\n   * @param language Language of the terms.\n   * @param callback The callback\n   */\n  addTerm(listId: string, term: string, language: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param term Term to be deleted\n   * @param language Language of the terms.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  addTerm(listId: string, term: string, language: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  addTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        term,\n        language,\n        options\n      },\n      addTermOperationSpec,\n      callback);\n  }\n\n  /**\n   * Deletes a term from the list with list Id equal to the list Id passed.\n   * @param listId List Id of the image list.\n   * @param term Term to be deleted\n   * @param language Language of the terms.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementTermDeleteTermResponse>\n   */\n  deleteTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementTermDeleteTermResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param term Term to be deleted\n   * @param language Language of the terms.\n   * @param callback The callback\n   */\n  deleteTerm(listId: string, term: string, language: string, callback: msRest.ServiceCallback<string>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param term Term to be deleted\n   * @param language Language of the terms.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteTerm(listId: string, term: string, language: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<string>): void;\n  deleteTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<string>, callback?: msRest.ServiceCallback<string>): Promise<Models.ListManagementTermDeleteTermResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        term,\n        language,\n        options\n      },\n      deleteTermOperationSpec,\n      callback) as Promise<Models.ListManagementTermDeleteTermResponse>;\n  }\n\n  /**\n   * Gets all terms from the list with list Id equal to the list Id passed.\n   * @param listId List Id of the image list.\n   * @param language Language of the terms.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementTermGetAllTermsResponse>\n   */\n  getAllTerms(listId: string, language: string, options?: Models.ListManagementTermGetAllTermsOptionalParams): Promise<Models.ListManagementTermGetAllTermsResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param language Language of the terms.\n   * @param callback The callback\n   */\n  getAllTerms(listId: string, language: string, callback: msRest.ServiceCallback<Models.Terms>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param language Language of the terms.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAllTerms(listId: string, language: string, options: Models.ListManagementTermGetAllTermsOptionalParams, callback: msRest.ServiceCallback<Models.Terms>): void;\n  getAllTerms(listId: string, language: string, options?: Models.ListManagementTermGetAllTermsOptionalParams | msRest.ServiceCallback<Models.Terms>, callback?: msRest.ServiceCallback<Models.Terms>): Promise<Models.ListManagementTermGetAllTermsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        language,\n        options\n      },\n      getAllTermsOperationSpec,\n      callback) as Promise<Models.ListManagementTermGetAllTermsResponse>;\n  }\n\n  /**\n   * Deletes all terms from the list with list Id equal to the list Id passed.\n   * @param listId List Id of the image list.\n   * @param language Language of the terms.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ListManagementTermDeleteAllTermsResponse>\n   */\n  deleteAllTerms(listId: string, language: string, options?: msRest.RequestOptionsBase): Promise<Models.ListManagementTermDeleteAllTermsResponse>;\n  /**\n   * @param listId List Id of the image list.\n   * @param language Language of the terms.\n   * @param callback The callback\n   */\n  deleteAllTerms(listId: string, language: string, callback: msRest.ServiceCallback<string>): void;\n  /**\n   * @param listId List Id of the image list.\n   * @param language Language of the terms.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteAllTerms(listId: string, language: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<string>): void;\n  deleteAllTerms(listId: string, language: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<string>, callback?: msRest.ServiceCallback<string>): Promise<Models.ListManagementTermDeleteAllTermsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listId,\n        language,\n        options\n      },\n      deleteAllTermsOperationSpec,\n      callback) as Promise<Models.ListManagementTermDeleteAllTermsResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst addTermOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/lists/v1.0/termlists/{listId}/terms/{term}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1,\n    Parameters.term\n  ],\n  queryParameters: [\n    Parameters.language0\n  ],\n  responses: {\n    201: {},\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst deleteTermOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"contentmoderator/lists/v1.0/termlists/{listId}/terms/{term}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1,\n    Parameters.term\n  ],\n  queryParameters: [\n    Parameters.language0\n  ],\n  responses: {\n    204: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst getAllTermsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"contentmoderator/lists/v1.0/termlists/{listId}/terms\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  queryParameters: [\n    Parameters.language0,\n    Parameters.offset,\n    Parameters.limit\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Terms\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst deleteAllTermsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"contentmoderator/lists/v1.0/termlists/{listId}/terms\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.listId1\n  ],\n  queryParameters: [\n    Parameters.language0\n  ],\n  responses: {\n    204: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  APIError,\n  Content,\n  CreateReviewBodyItem,\n  CreateReviewBodyItemMetadataItem,\n  CreateVideoReviewsBodyItem,\n  CreateVideoReviewsBodyItemMetadataItem,\n  CreateVideoReviewsBodyItemVideoFramesItem,\n  CreateVideoReviewsBodyItemVideoFramesItemMetadataItem,\n  CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem,\n  ErrorModel,\n  Frame,\n  Frames,\n  Job,\n  JobExecutionReportDetails,\n  JobId,\n  KeyValuePair,\n  Review,\n  Tag,\n  TranscriptModerationBodyItem,\n  TranscriptModerationBodyItemTermsItem,\n  VideoFrameBodyItem,\n  VideoFrameBodyItemMetadataItem,\n  VideoFrameBodyItemReviewerResultTagsItem\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/reviewsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { ContentModeratorClientContext } from \"../contentModeratorClientContext\";\n\n/** Class representing a Reviews. */\nexport class Reviews {\n  private readonly client: ContentModeratorClientContext;\n\n  /**\n   * Create a Reviews.\n   * @param {ContentModeratorClientContext} client Reference to the service client.\n   */\n  constructor(client: ContentModeratorClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Returns review details for the review Id passed.\n   * @param teamName Your Team Name.\n   * @param reviewId Id of the review.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ReviewsGetReviewResponse>\n   */\n  getReview(teamName: string, reviewId: string, options?: msRest.RequestOptionsBase): Promise<Models.ReviewsGetReviewResponse>;\n  /**\n   * @param teamName Your Team Name.\n   * @param reviewId Id of the review.\n   * @param callback The callback\n   */\n  getReview(teamName: string, reviewId: string, callback: msRest.ServiceCallback<Models.Review>): void;\n  /**\n   * @param teamName Your Team Name.\n   * @param reviewId Id of the review.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getReview(teamName: string, reviewId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Review>): void;\n  getReview(teamName: string, reviewId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Review>, callback?: msRest.ServiceCallback<Models.Review>): Promise<Models.ReviewsGetReviewResponse> {\n    return this.client.sendOperationRequest(\n      {\n        teamName,\n        reviewId,\n        options\n      },\n      getReviewOperationSpec,\n      callback) as Promise<Models.ReviewsGetReviewResponse>;\n  }\n\n  /**\n   * Get the Job Details for a Job Id.\n   * @param teamName Your Team Name.\n   * @param jobId Id of the job.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ReviewsGetJobDetailsResponse>\n   */\n  getJobDetails(teamName: string, jobId: string, options?: msRest.RequestOptionsBase): Promise<Models.ReviewsGetJobDetailsResponse>;\n  /**\n   * @param teamName Your Team Name.\n   * @param jobId Id of the job.\n   * @param callback The callback\n   */\n  getJobDetails(teamName: string, jobId: string, callback: msRest.ServiceCallback<Models.Job>): void;\n  /**\n   * @param teamName Your Team Name.\n   * @param jobId Id of the job.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getJobDetails(teamName: string, jobId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Job>): void;\n  getJobDetails(teamName: string, jobId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Job>, callback?: msRest.ServiceCallback<Models.Job>): Promise<Models.ReviewsGetJobDetailsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        teamName,\n        jobId,\n        options\n      },\n      getJobDetailsOperationSpec,\n      callback) as Promise<Models.ReviewsGetJobDetailsResponse>;\n  }\n\n  /**\n   * The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing,\n   * results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint.\n   *\n   * <h3>CallBack Schemas </h3>\n   * <h4>Review Completion CallBack Sample</h4>\n   * <p>\n   * {<br/>\n   * \"ReviewId\": \"<Review Id>\",<br/>\n   * \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\n   * \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\n   * \"CallBackType\": \"Review\",<br/>\n   * \"ContentId\": \"<The ContentId that was specified input>\",<br/>\n   * \"Metadata\": {<br/>\n   * \"adultscore\": \"0.xxx\",<br/>\n   * \"a\": \"False\",<br/>\n   * \"racyscore\": \"0.xxx\",<br/>\n   * \"r\": \"True\"<br/>\n   * },<br/>\n   * \"ReviewerResultTags\": {<br/>\n   * \"a\": \"False\",<br/>\n   * \"r\": \"True\"<br/>\n   * }<br/>\n   * }<br/>\n   *\n   * </p>.\n   * @param urlContentType The content type.\n   * @param teamName Your team name.\n   * @param createReviewBody Body for create reviews API\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ReviewsCreateReviewsResponse>\n   */\n  createReviews(urlContentType: string, teamName: string, createReviewBody: Models.CreateReviewBodyItem[], options?: Models.ReviewsCreateReviewsOptionalParams): Promise<Models.ReviewsCreateReviewsResponse>;\n  /**\n   * @param urlContentType The content type.\n   * @param teamName Your team name.\n   * @param createReviewBody Body for create reviews API\n   * @param callback The callback\n   */\n  createReviews(urlContentType: string, teamName: string, createReviewBody: Models.CreateReviewBodyItem[], callback: msRest.ServiceCallback<string[]>): void;\n  /**\n   * @param urlContentType The content type.\n   * @param teamName Your team name.\n   * @param createReviewBody Body for create reviews API\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createReviews(urlContentType: string, teamName: string, createReviewBody: Models.CreateReviewBodyItem[], options: Models.ReviewsCreateReviewsOptionalParams, callback: msRest.ServiceCallback<string[]>): void;\n  createReviews(urlContentType: string, teamName: string, createReviewBody: Models.CreateReviewBodyItem[], options?: Models.ReviewsCreateReviewsOptionalParams | msRest.ServiceCallback<string[]>, callback?: msRest.ServiceCallback<string[]>): Promise<Models.ReviewsCreateReviewsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        urlContentType,\n        teamName,\n        createReviewBody,\n        options\n      },\n      createReviewsOperationSpec,\n      callback) as Promise<Models.ReviewsCreateReviewsResponse>;\n  }\n\n  /**\n   * A job Id will be returned for the content posted on this endpoint.\n   *\n   * Once the content is evaluated against the Workflow provided the review will be created or\n   * ignored based on the workflow expression.\n   *\n   * <h3>CallBack Schemas </h3>\n   *\n   * <p>\n   * <h4>Job Completion CallBack Sample</h4><br/>\n   *\n   * {<br/>\n   * \"JobId\": \"<Job Id>,<br/>\n   * \"ReviewId\": \"<Review Id, if the Job resulted in a Review to be created>\",<br/>\n   * \"WorkFlowId\": \"default\",<br/>\n   * \"Status\": \"<This will be one of Complete, InProgress, Error>\",<br/>\n   * \"ContentType\": \"Image\",<br/>\n   * \"ContentId\": \"<This is the ContentId that was specified on input>\",<br/>\n   * \"CallBackType\": \"Job\",<br/>\n   * \"Metadata\": {<br/>\n   * \"adultscore\": \"0.xxx\",<br/>\n   * \"a\": \"False\",<br/>\n   * \"racyscore\": \"0.xxx\",<br/>\n   * \"r\": \"True\"<br/>\n   * }<br/>\n   * }<br/>\n   *\n   * </p>\n   * <p>\n   * <h4>Review Completion CallBack Sample</h4><br/>\n   *\n   * {\n   * \"ReviewId\": \"<Review Id>\",<br/>\n   * \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\n   * \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\n   * \"CallBackType\": \"Review\",<br/>\n   * \"ContentId\": \"<The ContentId that was specified input>\",<br/>\n   * \"Metadata\": {<br/>\n   * \"adultscore\": \"0.xxx\",\n   * \"a\": \"False\",<br/>\n   * \"racyscore\": \"0.xxx\",<br/>\n   * \"r\": \"True\"<br/>\n   * },<br/>\n   * \"ReviewerResultTags\": {<br/>\n   * \"a\": \"False\",<br/>\n   * \"r\": \"True\"<br/>\n   * }<br/>\n   * }<br/>\n   *\n   * </p>.\n   * @param teamName Your team name.\n   * @param contentType Image, Text or Video. Possible values include: 'Image', 'Text', 'Video'\n   * @param contentId Id/Name to identify the content submitted.\n   * @param workflowName Workflow Name that you want to invoke.\n   * @param jobContentType The content type. Possible values include: 'application/json',\n   * 'image/jpeg'\n   * @param content Content to evaluate.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ReviewsCreateJobResponse>\n   */\n  createJob(teamName: string, contentType: Models.ContentType, contentId: string, workflowName: string, jobContentType: Models.JobContentType, content: Models.Content, options?: Models.ReviewsCreateJobOptionalParams): Promise<Models.ReviewsCreateJobResponse>;\n  /**\n   * @param teamName Your team name.\n   * @param contentType Image, Text or Video. Possible values include: 'Image', 'Text', 'Video'\n   * @param contentId Id/Name to identify the content submitted.\n   * @param workflowName Workflow Name that you want to invoke.\n   * @param jobContentType The content type. Possible values include: 'application/json',\n   * 'image/jpeg'\n   * @param content Content to evaluate.\n   * @param callback The callback\n   */\n  createJob(teamName: string, contentType: Models.ContentType, contentId: string, workflowName: string, jobContentType: Models.JobContentType, content: Models.Content, callback: msRest.ServiceCallback<Models.JobId>): void;\n  /**\n   * @param teamName Your team name.\n   * @param contentType Image, Text or Video. Possible values include: 'Image', 'Text', 'Video'\n   * @param contentId Id/Name to identify the content submitted.\n   * @param workflowName Workflow Name that you want to invoke.\n   * @param jobContentType The content type. Possible values include: 'application/json',\n   * 'image/jpeg'\n   * @param content Content to evaluate.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createJob(teamName: string, contentType: Models.ContentType, contentId: string, workflowName: string, jobContentType: Models.JobContentType, content: Models.Content, options: Models.ReviewsCreateJobOptionalParams, callback: msRest.ServiceCallback<Models.JobId>): void;\n  createJob(teamName: string, contentType: Models.ContentType, contentId: string, workflowName: string, jobContentType: Models.JobContentType, content: Models.Content, options?: Models.ReviewsCreateJobOptionalParams | msRest.ServiceCallback<Models.JobId>, callback?: msRest.ServiceCallback<Models.JobId>): Promise<Models.ReviewsCreateJobResponse> {\n    return this.client.sendOperationRequest(\n      {\n        teamName,\n        contentType,\n        contentId,\n        workflowName,\n        jobContentType,\n        content,\n        options\n      },\n      createJobOperationSpec,\n      callback) as Promise<Models.ReviewsCreateJobResponse>;\n  }\n\n  /**\n   * The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing,\n   * results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint.\n   *\n   * <h3>CallBack Schemas </h3>\n   * <h4>Review Completion CallBack Sample</h4>\n   * <p>\n   * {<br/>\n   * \"ReviewId\": \"<Review Id>\",<br/>\n   * \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\n   * \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\n   * \"CallBackType\": \"Review\",<br/>\n   * \"ContentId\": \"<The ContentId that was specified input>\",<br/>\n   * \"Metadata\": {<br/>\n   * \"adultscore\": \"0.xxx\",<br/>\n   * \"a\": \"False\",<br/>\n   * \"racyscore\": \"0.xxx\",<br/>\n   * \"r\": \"True\"<br/>\n   * },<br/>\n   * \"ReviewerResultTags\": {<br/>\n   * \"a\": \"False\",<br/>\n   * \"r\": \"True\"<br/>\n   * }<br/>\n   * }<br/>\n   *\n   * </p>.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  addVideoFrame(teamName: string, reviewId: string, options?: Models.ReviewsAddVideoFrameOptionalParams): Promise<msRest.RestResponse>;\n  /**\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param callback The callback\n   */\n  addVideoFrame(teamName: string, reviewId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  addVideoFrame(teamName: string, reviewId: string, options: Models.ReviewsAddVideoFrameOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  addVideoFrame(teamName: string, reviewId: string, options?: Models.ReviewsAddVideoFrameOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        teamName,\n        reviewId,\n        options\n      },\n      addVideoFrameOperationSpec,\n      callback);\n  }\n\n  /**\n   * The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing,\n   * results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint.\n   *\n   * <h3>CallBack Schemas </h3>\n   * <h4>Review Completion CallBack Sample</h4>\n   * <p>\n   * {<br/>\n   * \"ReviewId\": \"<Review Id>\",<br/>\n   * \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\n   * \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\n   * \"CallBackType\": \"Review\",<br/>\n   * \"ContentId\": \"<The ContentId that was specified input>\",<br/>\n   * \"Metadata\": {<br/>\n   * \"adultscore\": \"0.xxx\",<br/>\n   * \"a\": \"False\",<br/>\n   * \"racyscore\": \"0.xxx\",<br/>\n   * \"r\": \"True\"<br/>\n   * },<br/>\n   * \"ReviewerResultTags\": {<br/>\n   * \"a\": \"False\",<br/>\n   * \"r\": \"True\"<br/>\n   * }<br/>\n   * }<br/>\n   *\n   * </p>.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ReviewsGetVideoFramesResponse>\n   */\n  getVideoFrames(teamName: string, reviewId: string, options?: Models.ReviewsGetVideoFramesOptionalParams): Promise<Models.ReviewsGetVideoFramesResponse>;\n  /**\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param callback The callback\n   */\n  getVideoFrames(teamName: string, reviewId: string, callback: msRest.ServiceCallback<Models.Frames>): void;\n  /**\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getVideoFrames(teamName: string, reviewId: string, options: Models.ReviewsGetVideoFramesOptionalParams, callback: msRest.ServiceCallback<Models.Frames>): void;\n  getVideoFrames(teamName: string, reviewId: string, options?: Models.ReviewsGetVideoFramesOptionalParams | msRest.ServiceCallback<Models.Frames>, callback?: msRest.ServiceCallback<Models.Frames>): Promise<Models.ReviewsGetVideoFramesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        teamName,\n        reviewId,\n        options\n      },\n      getVideoFramesOperationSpec,\n      callback) as Promise<Models.ReviewsGetVideoFramesResponse>;\n  }\n\n  /**\n   * Publish video review to make it available for review.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  publishVideoReview(teamName: string, reviewId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param callback The callback\n   */\n  publishVideoReview(teamName: string, reviewId: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  publishVideoReview(teamName: string, reviewId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  publishVideoReview(teamName: string, reviewId: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        teamName,\n        reviewId,\n        options\n      },\n      publishVideoReviewOperationSpec,\n      callback);\n  }\n\n  /**\n   * This API adds a transcript screen text result file for a video review. Transcript screen text\n   * result file is a result of Screen Text API . In order to generate transcript screen text result\n   * file , a transcript file has to be screened for profanity using Screen Text API.\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param transcriptModerationBody Body for add video transcript moderation result API\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: Models.TranscriptModerationBodyItem[], options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param transcriptModerationBody Body for add video transcript moderation result API\n   * @param callback The callback\n   */\n  addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: Models.TranscriptModerationBodyItem[], callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param transcriptModerationBody Body for add video transcript moderation result API\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: Models.TranscriptModerationBodyItem[], options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: Models.TranscriptModerationBodyItem[], options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentType,\n        teamName,\n        reviewId,\n        transcriptModerationBody,\n        options\n      },\n      addVideoTranscriptModerationResultOperationSpec,\n      callback);\n  }\n\n  /**\n   * This API adds a transcript file (text version of all the words spoken in a video) to a video\n   * review. The file should be a valid WebVTT format.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param vTTfile Transcript file of the video.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  addVideoTranscript(teamName: string, reviewId: string, vTTfile: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param vTTfile Transcript file of the video.\n   * @param callback The callback\n   */\n  addVideoTranscript(teamName: string, reviewId: string, vTTfile: msRest.HttpRequestBody, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param vTTfile Transcript file of the video.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  addVideoTranscript(teamName: string, reviewId: string, vTTfile: msRest.HttpRequestBody, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  addVideoTranscript(teamName: string, reviewId: string, vTTfile: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        teamName,\n        reviewId,\n        vTTfile,\n        options\n      },\n      addVideoTranscriptOperationSpec,\n      callback);\n  }\n\n  /**\n   * The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing,\n   * results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint.\n   *\n   * <h3>CallBack Schemas </h3>\n   * <h4>Review Completion CallBack Sample</h4>\n   * <p>\n   * {<br/>\n   * \"ReviewId\": \"<Review Id>\",<br/>\n   * \"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\n   * \"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\n   * \"CallBackType\": \"Review\",<br/>\n   * \"ContentId\": \"<The ContentId that was specified input>\",<br/>\n   * \"Metadata\": {<br/>\n   * \"adultscore\": \"0.xxx\",<br/>\n   * \"a\": \"False\",<br/>\n   * \"racyscore\": \"0.xxx\",<br/>\n   * \"r\": \"True\"<br/>\n   * },<br/>\n   * \"ReviewerResultTags\": {<br/>\n   * \"a\": \"False\",<br/>\n   * \"r\": \"True\"<br/>\n   * }<br/>\n   * }<br/>\n   *\n   * </p>.\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param createVideoReviewsBody Body for create reviews API\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ReviewsCreateVideoReviewsResponse>\n   */\n  createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: Models.CreateVideoReviewsBodyItem[], options?: Models.ReviewsCreateVideoReviewsOptionalParams): Promise<Models.ReviewsCreateVideoReviewsResponse>;\n  /**\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param createVideoReviewsBody Body for create reviews API\n   * @param callback The callback\n   */\n  createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: Models.CreateVideoReviewsBodyItem[], callback: msRest.ServiceCallback<string[]>): void;\n  /**\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param createVideoReviewsBody Body for create reviews API\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: Models.CreateVideoReviewsBodyItem[], options: Models.ReviewsCreateVideoReviewsOptionalParams, callback: msRest.ServiceCallback<string[]>): void;\n  createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: Models.CreateVideoReviewsBodyItem[], options?: Models.ReviewsCreateVideoReviewsOptionalParams | msRest.ServiceCallback<string[]>, callback?: msRest.ServiceCallback<string[]>): Promise<Models.ReviewsCreateVideoReviewsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentType,\n        teamName,\n        createVideoReviewsBody,\n        options\n      },\n      createVideoReviewsOperationSpec,\n      callback) as Promise<Models.ReviewsCreateVideoReviewsResponse>;\n  }\n\n  /**\n   * Use this method to add frames for a video review.Timescale: This parameter is a factor which is\n   * used to convert the timestamp on a frame into milliseconds. Timescale is provided in the output\n   * of the Content Moderator video media processor on the Azure Media Services platform.Timescale in\n   * the Video Moderation output is Ticks/Second.\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param videoFrameBody Body for add video frames API\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: Models.VideoFrameBodyItem[], options?: Models.ReviewsAddVideoFrameUrlOptionalParams): Promise<msRest.RestResponse>;\n  /**\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param videoFrameBody Body for add video frames API\n   * @param callback The callback\n   */\n  addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: Models.VideoFrameBodyItem[], callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param videoFrameBody Body for add video frames API\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: Models.VideoFrameBodyItem[], options: Models.ReviewsAddVideoFrameUrlOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: Models.VideoFrameBodyItem[], options?: Models.ReviewsAddVideoFrameUrlOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentType,\n        teamName,\n        reviewId,\n        videoFrameBody,\n        options\n      },\n      addVideoFrameUrlOperationSpec,\n      callback);\n  }\n\n  /**\n   * Use this method to add frames for a video review.Timescale: This parameter is a factor which is\n   * used to convert the timestamp on a frame into milliseconds. Timescale is provided in the output\n   * of the Content Moderator video media processor on the Azure Media Services platform.Timescale in\n   * the Video Moderation output is Ticks/Second.\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param frameImageZip Zip file containing frame images.\n   * @param frameMetadata Metadata of the frame.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata: string, options?: Models.ReviewsAddVideoFrameStreamOptionalParams): Promise<msRest.RestResponse>;\n  /**\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param frameImageZip Zip file containing frame images.\n   * @param frameMetadata Metadata of the frame.\n   * @param callback The callback\n   */\n  addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param contentType The content type.\n   * @param teamName Your team name.\n   * @param reviewId Id of the review.\n   * @param frameImageZip Zip file containing frame images.\n   * @param frameMetadata Metadata of the frame.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata: string, options: Models.ReviewsAddVideoFrameStreamOptionalParams, callback: msRest.ServiceCallback<void>): void;\n  addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: msRest.HttpRequestBody, frameMetadata: string, options?: Models.ReviewsAddVideoFrameStreamOptionalParams | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentType,\n        teamName,\n        reviewId,\n        frameImageZip,\n        frameMetadata,\n        options\n      },\n      addVideoFrameStreamOperationSpec,\n      callback);\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst getReviewOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName,\n    Parameters.reviewId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Review\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst getJobDetailsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/jobs/{JobId}\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName,\n    Parameters.jobId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Job\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst createReviewsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName\n  ],\n  queryParameters: [\n    Parameters.subTeam\n  ],\n  headerParameters: [\n    Parameters.urlContentType\n  ],\n  requestBody: {\n    parameterPath: \"createReviewBody\",\n    mapper: {\n      required: true,\n      serializedName: \"createReviewBody\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"CreateReviewBodyItem\"\n          }\n        }\n      }\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst createJobOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/jobs\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName\n  ],\n  queryParameters: [\n    Parameters.contentType1,\n    Parameters.contentId,\n    Parameters.workflowName,\n    Parameters.callBackEndpoint\n  ],\n  headerParameters: [\n    Parameters.jobContentType\n  ],\n  requestBody: {\n    parameterPath: \"content\",\n    mapper: {\n      ...Mappers.Content,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobId\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst addVideoFrameOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName,\n    Parameters.reviewId\n  ],\n  queryParameters: [\n    Parameters.timescale\n  ],\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst getVideoFramesOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName,\n    Parameters.reviewId\n  ],\n  queryParameters: [\n    Parameters.startSeed,\n    Parameters.noOfRecords,\n    Parameters.filter\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Frames\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst publishVideoReviewOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/publish\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName,\n    Parameters.reviewId\n  ],\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst addVideoTranscriptModerationResultOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/transcriptmoderationresult\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName,\n    Parameters.reviewId\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"transcriptModerationBody\",\n    mapper: {\n      required: true,\n      serializedName: \"transcriptModerationBody\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"TranscriptModerationBodyItem\"\n          }\n        }\n      }\n    }\n  },\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst addVideoTranscriptOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/transcript\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName,\n    Parameters.reviewId\n  ],\n  headerParameters: [\n    Parameters.contentType2\n  ],\n  requestBody: {\n    parameterPath: \"vTTfile\",\n    mapper: {\n      required: true,\n      serializedName: \"VTT file\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"text/plain\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst createVideoReviewsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName\n  ],\n  queryParameters: [\n    Parameters.subTeam\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"createVideoReviewsBody\",\n    mapper: {\n      required: true,\n      serializedName: \"CreateVideoReviewsBody\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"CreateVideoReviewsBodyItem\"\n          }\n        }\n      }\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst addVideoFrameUrlOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName,\n    Parameters.reviewId\n  ],\n  queryParameters: [\n    Parameters.timescale\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  requestBody: {\n    parameterPath: \"videoFrameBody\",\n    mapper: {\n      required: true,\n      serializedName: \"videoFrameBody\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"VideoFrameBodyItem\"\n          }\n        }\n      }\n    }\n  },\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n\nconst addVideoFrameStreamOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"contentmoderator/review/v1.0/teams/{teamName}/reviews/{reviewId}/frames\",\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.teamName,\n    Parameters.reviewId\n  ],\n  queryParameters: [\n    Parameters.timescale\n  ],\n  headerParameters: [\n    Parameters.contentType0\n  ],\n  formDataParameters: [\n    Parameters.frameImageZip,\n    Parameters.frameMetadata\n  ],\n  contentType: \"multipart/form-data\",\n  responses: {\n    204: {},\n    default: {\n      bodyMapper: Mappers.APIError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nconst packageName = \"@azure/cognitiveservices-contentmoderator\";\nconst packageVersion = \"5.0.1\";\n\nexport class ContentModeratorClientContext extends msRest.ServiceClient {\n  endpoint: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the ContentModeratorClientContext class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * https://westus.api.cognitive.microsoft.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    if (endpoint == undefined) {\n      throw new Error(\"'endpoint' cannot be null.\");\n    }\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.baseUri = \"{Endpoint}\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.endpoint = endpoint;\n    this.credentials = credentials;\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { ContentModeratorClientContext } from \"./contentModeratorClientContext\";\n\nclass ContentModeratorClient extends ContentModeratorClientContext {\n  // Operation groups\n  imageModeration: operations.ImageModeration;\n  textModeration: operations.TextModeration;\n  listManagementImageLists: operations.ListManagementImageLists;\n  listManagementTermLists: operations.ListManagementTermLists;\n  listManagementImage: operations.ListManagementImage;\n  listManagementTerm: operations.ListManagementTerm;\n  reviews: operations.Reviews;\n\n  /**\n   * Initializes a new instance of the ContentModeratorClient class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * https://westus.api.cognitive.microsoft.com).\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions) {\n    super(credentials, endpoint, options);\n    this.imageModeration = new operations.ImageModeration(this);\n    this.textModeration = new operations.TextModeration(this);\n    this.listManagementImageLists = new operations.ListManagementImageLists(this);\n    this.listManagementTermLists = new operations.ListManagementTermLists(this);\n    this.listManagementImage = new operations.ListManagementImage(this);\n    this.listManagementTerm = new operations.ListManagementTerm(this);\n    this.reviews = new operations.Reviews(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  ContentModeratorClient,\n  ContentModeratorClientContext,\n  Models as ContentModeratorModels,\n  Mappers as ContentModeratorMappers\n};\nexport * from \"./operations\";\n"],"names":["msRest.Serializer","Parameters.endpoint","Parameters.cacheImage","Mappers.FoundFaces","Mappers.APIError","Parameters.language0","Parameters.enhanced","Mappers.OCR","Mappers.Evaluate","Parameters.listId0","Mappers.MatchResponse","Parameters.contentType0","Mappers.ImageUrl","serializer","Mappers","Parameters.language1","Parameters.autocorrect","Parameters.pII","Parameters.classify","Parameters.textContentType","Mappers.Screen","Mappers.DetectedLanguage","Parameters.listId1","Mappers.ImageList","Mappers.Body","Mappers.RefreshIndex","getDetailsOperationSpec","deleteMethodOperationSpec","updateOperationSpec","createOperationSpec","refreshIndexMethodOperationSpec","Mappers.TermList","Parameters.tag","Parameters.label","Mappers.Image","Mappers.ImageIds","Parameters.imageId","Parameters.term","Parameters.offset","Parameters.limit","Mappers.Terms","Parameters.teamName","Parameters.reviewId","Mappers.Review","Parameters.jobId","Mappers.Job","Parameters.subTeam","Parameters.urlContentType","Parameters.contentType1","Parameters.contentId","Parameters.workflowName","Parameters.callBackEndpoint","Parameters.jobContentType","Mappers.Content","Mappers.JobId","Parameters.timescale","Parameters.startSeed","Parameters.noOfRecords","Parameters.filter","Mappers.Frames","Parameters.contentType2","Parameters.frameImageZip","Parameters.frameMetadata","msRest.getDefaultUserAgentValue","msRest.ServiceClient","operations.ImageModeration","operations.TextModeration","operations.ListManagementImageLists","operations.ListManagementTermLists","operations.ListManagementImage","operations.ListManagementTerm","operations.Reviews"],"mappings":"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"}