/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/textModerationMappers";
import * as Parameters from "../models/parameters";
/** Class representing a TextModeration. */
var TextModeration = /** @class */ (function () {
    /**
     * Create a TextModeration.
     * @param {ContentModeratorClientContext} client Reference to the service client.
     */
    function TextModeration(client) {
        this.client = client;
    }
    TextModeration.prototype.screenText = function (textContentType, textContent, options, callback) {
        return this.client.sendOperationRequest({
            textContentType: textContentType,
            textContent: textContent,
            options: options
        }, screenTextOperationSpec, callback);
    };
    TextModeration.prototype.detectLanguage = function (textContentType, textContent, options, callback) {
        return this.client.sendOperationRequest({
            textContentType: textContentType,
            textContent: textContent,
            options: options
        }, detectLanguageOperationSpec, callback);
    };
    return TextModeration;
}());
export { TextModeration };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var screenTextOperationSpec = {
    httpMethod: "POST",
    path: "contentmoderator/moderate/v1.0/ProcessText/Screen/",
    urlParameters: [
        Parameters.endpoint
    ],
    queryParameters: [
        Parameters.language1,
        Parameters.autocorrect,
        Parameters.pII,
        Parameters.listId0,
        Parameters.classify
    ],
    headerParameters: [
        Parameters.textContentType
    ],
    requestBody: {
        parameterPath: "textContent",
        mapper: {
            required: true,
            serializedName: "Text Content",
            type: {
                name: "Stream"
            }
        }
    },
    contentType: "text/plain",
    responses: {
        200: {
            bodyMapper: Mappers.Screen
        },
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
var detectLanguageOperationSpec = {
    httpMethod: "POST",
    path: "contentmoderator/moderate/v1.0/ProcessText/DetectLanguage",
    urlParameters: [
        Parameters.endpoint
    ],
    headerParameters: [
        Parameters.textContentType
    ],
    requestBody: {
        parameterPath: "textContent",
        mapper: {
            required: true,
            serializedName: "Text Content",
            type: {
                name: "Stream"
            }
        }
    },
    contentType: "text/plain",
    responses: {
        200: {
            bodyMapper: Mappers.DetectedLanguage
        },
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=textModeration.js.map