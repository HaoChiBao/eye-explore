/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/listManagementTermMappers";
import * as Parameters from "../models/parameters";
/** Class representing a ListManagementTerm. */
var ListManagementTerm = /** @class */ (function () {
    /**
     * Create a ListManagementTerm.
     * @param {ContentModeratorClientContext} client Reference to the service client.
     */
    function ListManagementTerm(client) {
        this.client = client;
    }
    ListManagementTerm.prototype.addTerm = function (listId, term, language, options, callback) {
        return this.client.sendOperationRequest({
            listId: listId,
            term: term,
            language: language,
            options: options
        }, addTermOperationSpec, callback);
    };
    ListManagementTerm.prototype.deleteTerm = function (listId, term, language, options, callback) {
        return this.client.sendOperationRequest({
            listId: listId,
            term: term,
            language: language,
            options: options
        }, deleteTermOperationSpec, callback);
    };
    ListManagementTerm.prototype.getAllTerms = function (listId, language, options, callback) {
        return this.client.sendOperationRequest({
            listId: listId,
            language: language,
            options: options
        }, getAllTermsOperationSpec, callback);
    };
    ListManagementTerm.prototype.deleteAllTerms = function (listId, language, options, callback) {
        return this.client.sendOperationRequest({
            listId: listId,
            language: language,
            options: options
        }, deleteAllTermsOperationSpec, callback);
    };
    return ListManagementTerm;
}());
export { ListManagementTerm };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var addTermOperationSpec = {
    httpMethod: "POST",
    path: "contentmoderator/lists/v1.0/termlists/{listId}/terms/{term}",
    urlParameters: [
        Parameters.endpoint,
        Parameters.listId1,
        Parameters.term
    ],
    queryParameters: [
        Parameters.language0
    ],
    responses: {
        201: {},
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
var deleteTermOperationSpec = {
    httpMethod: "DELETE",
    path: "contentmoderator/lists/v1.0/termlists/{listId}/terms/{term}",
    urlParameters: [
        Parameters.endpoint,
        Parameters.listId1,
        Parameters.term
    ],
    queryParameters: [
        Parameters.language0
    ],
    responses: {
        204: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "String"
                }
            }
        },
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
var getAllTermsOperationSpec = {
    httpMethod: "GET",
    path: "contentmoderator/lists/v1.0/termlists/{listId}/terms",
    urlParameters: [
        Parameters.endpoint,
        Parameters.listId1
    ],
    queryParameters: [
        Parameters.language0,
        Parameters.offset,
        Parameters.limit
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Terms
        },
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
var deleteAllTermsOperationSpec = {
    httpMethod: "DELETE",
    path: "contentmoderator/lists/v1.0/termlists/{listId}/terms",
    urlParameters: [
        Parameters.endpoint,
        Parameters.listId1
    ],
    queryParameters: [
        Parameters.language0
    ],
    responses: {
        204: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "String"
                }
            }
        },
        default: {
            bodyMapper: Mappers.APIError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=listManagementTerm.js.map