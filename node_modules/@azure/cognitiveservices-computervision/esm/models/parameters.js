/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
export var descriptionExclude = {
    parameterPath: [
        "options",
        "descriptionExclude"
    ],
    mapper: {
        serializedName: "descriptionExclude",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Celebrities",
                        "Landmarks"
                    ]
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var details = {
    parameterPath: [
        "options",
        "details"
    ],
    mapper: {
        serializedName: "details",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Celebrities",
                        "Landmarks"
                    ]
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var detectOrientation = {
    parameterPath: "detectOrientation",
    mapper: {
        required: true,
        serializedName: "detectOrientation",
        defaultValue: true,
        type: {
            name: "Boolean"
        }
    }
};
export var endpoint = {
    parameterPath: "endpoint",
    mapper: {
        required: true,
        serializedName: "Endpoint",
        defaultValue: '',
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var height = {
    parameterPath: "height",
    mapper: {
        required: true,
        serializedName: "height",
        constraints: {
            InclusiveMaximum: 1024,
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
export var language0 = {
    parameterPath: [
        "options",
        "language"
    ],
    mapper: {
        serializedName: "language",
        defaultValue: 'en',
        type: {
            name: "String"
        }
    }
};
export var language1 = {
    parameterPath: [
        "options",
        "language"
    ],
    mapper: {
        serializedName: "language",
        defaultValue: 'unk',
        type: {
            name: "Enum",
            allowedValues: [
                "unk",
                "zh-Hans",
                "zh-Hant",
                "cs",
                "da",
                "nl",
                "en",
                "fi",
                "fr",
                "de",
                "el",
                "hu",
                "it",
                "ja",
                "ko",
                "nb",
                "pl",
                "pt",
                "ru",
                "es",
                "sv",
                "tr",
                "ar",
                "ro",
                "sr-Cyrl",
                "sr-Latn",
                "sk"
            ]
        }
    }
};
export var language2 = {
    parameterPath: [
        "options",
        "language"
    ],
    mapper: {
        serializedName: "language",
        type: {
            name: "String"
        }
    }
};
export var maxCandidates = {
    parameterPath: [
        "options",
        "maxCandidates"
    ],
    mapper: {
        serializedName: "maxCandidates",
        defaultValue: 1,
        type: {
            name: "Number"
        }
    }
};
export var model = {
    parameterPath: "model",
    mapper: {
        required: true,
        serializedName: "model",
        type: {
            name: "String"
        }
    }
};
export var modelVersion = {
    parameterPath: [
        "options",
        "modelVersion"
    ],
    mapper: {
        serializedName: "model-version",
        defaultValue: 'latest',
        constraints: {
            Pattern: /^(latest|\d{4}-\d{2}-\d{2})(-preview)?$/
        },
        type: {
            name: "String"
        }
    }
};
export var operationId = {
    parameterPath: "operationId",
    mapper: {
        required: true,
        serializedName: "operationId",
        type: {
            name: "Uuid"
        }
    }
};
export var pages = {
    parameterPath: [
        "options",
        "pages"
    ],
    mapper: {
        serializedName: "pages",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var readingOrder = {
    parameterPath: [
        "options",
        "readingOrder"
    ],
    mapper: {
        serializedName: "readingOrder",
        defaultValue: 'basic',
        type: {
            name: "String"
        }
    }
};
export var smartCropping = {
    parameterPath: [
        "options",
        "smartCropping"
    ],
    mapper: {
        serializedName: "smartCropping",
        defaultValue: false,
        type: {
            name: "Boolean"
        }
    }
};
export var visualFeatures = {
    parameterPath: [
        "options",
        "visualFeatures"
    ],
    mapper: {
        serializedName: "visualFeatures",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Enum",
                    allowedValues: [
                        "ImageType",
                        "Faces",
                        "Adult",
                        "Categories",
                        "Color",
                        "Tags",
                        "Description",
                        "Objects",
                        "Brands"
                    ]
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var width = {
    parameterPath: "width",
    mapper: {
        required: true,
        serializedName: "width",
        constraints: {
            InclusiveMaximum: 1024,
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
//# sourceMappingURL=parameters.js.map