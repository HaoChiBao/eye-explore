/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
export var applyScope = {
    parameterPath: [
        "options",
        "applyScope"
    ],
    mapper: {
        serializedName: "applyScope",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Uuid"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var detectionModel = {
    parameterPath: [
        "options",
        "detectionModel"
    ],
    mapper: {
        serializedName: "detectionModel",
        defaultValue: 'detection_01',
        type: {
            name: "String"
        }
    }
};
export var endpoint = {
    parameterPath: "endpoint",
    mapper: {
        required: true,
        serializedName: "Endpoint",
        defaultValue: '',
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var faceIdTimeToLive = {
    parameterPath: [
        "options",
        "faceIdTimeToLive"
    ],
    mapper: {
        serializedName: "faceIdTimeToLive",
        defaultValue: 86400,
        constraints: {
            InclusiveMaximum: 86400,
            InclusiveMinimum: 60
        },
        type: {
            name: "Number"
        }
    }
};
export var faceListId = {
    parameterPath: "faceListId",
    mapper: {
        required: true,
        serializedName: "faceListId",
        constraints: {
            MaxLength: 64,
            Pattern: /^[a-z0-9-_]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var largeFaceListId = {
    parameterPath: "largeFaceListId",
    mapper: {
        required: true,
        serializedName: "largeFaceListId",
        constraints: {
            MaxLength: 64,
            Pattern: /^[a-z0-9-_]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var largePersonGroupId = {
    parameterPath: "largePersonGroupId",
    mapper: {
        required: true,
        serializedName: "largePersonGroupId",
        constraints: {
            MaxLength: 64,
            Pattern: /^[a-z0-9-_]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var operationId = {
    parameterPath: "operationId",
    mapper: {
        required: true,
        serializedName: "operationId",
        type: {
            name: "Uuid"
        }
    }
};
export var persistedFaceId = {
    parameterPath: "persistedFaceId",
    mapper: {
        required: true,
        serializedName: "persistedFaceId",
        type: {
            name: "Uuid"
        }
    }
};
export var personGroupId = {
    parameterPath: "personGroupId",
    mapper: {
        required: true,
        serializedName: "personGroupId",
        constraints: {
            MaxLength: 64,
            Pattern: /^[a-z0-9-_]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var personId = {
    parameterPath: "personId",
    mapper: {
        required: true,
        serializedName: "personId",
        type: {
            name: "Uuid"
        }
    }
};
export var recognitionModel = {
    parameterPath: [
        "options",
        "recognitionModel"
    ],
    mapper: {
        serializedName: "recognitionModel",
        defaultValue: 'recognition_01',
        type: {
            name: "String"
        }
    }
};
export var returnFaceAttributes = {
    parameterPath: [
        "options",
        "returnFaceAttributes"
    ],
    mapper: {
        serializedName: "returnFaceAttributes",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Enum",
                    allowedValues: [
                        "age",
                        "gender",
                        "headPose",
                        "smile",
                        "facialHair",
                        "glasses",
                        "emotion",
                        "hair",
                        "makeup",
                        "occlusion",
                        "accessories",
                        "blur",
                        "exposure",
                        "noise",
                        "mask",
                        "qualityForRecognition"
                    ]
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var returnFaceId = {
    parameterPath: [
        "options",
        "returnFaceId"
    ],
    mapper: {
        serializedName: "returnFaceId",
        defaultValue: true,
        type: {
            name: "Boolean"
        }
    }
};
export var returnFaceLandmarks = {
    parameterPath: [
        "options",
        "returnFaceLandmarks"
    ],
    mapper: {
        serializedName: "returnFaceLandmarks",
        defaultValue: false,
        type: {
            name: "Boolean"
        }
    }
};
export var returnRecognitionModel = {
    parameterPath: [
        "options",
        "returnRecognitionModel"
    ],
    mapper: {
        serializedName: "returnRecognitionModel",
        defaultValue: false,
        type: {
            name: "Boolean"
        }
    }
};
export var snapshotId = {
    parameterPath: "snapshotId",
    mapper: {
        required: true,
        serializedName: "snapshotId",
        type: {
            name: "Uuid"
        }
    }
};
export var start0 = {
    parameterPath: [
        "options",
        "start"
    ],
    mapper: {
        serializedName: "start",
        type: {
            name: "String"
        }
    }
};
export var start1 = {
    parameterPath: [
        "options",
        "start"
    ],
    mapper: {
        serializedName: "start",
        constraints: {
            MaxLength: 64
        },
        type: {
            name: "String"
        }
    }
};
export var targetFace = {
    parameterPath: [
        "options",
        "targetFace"
    ],
    mapper: {
        serializedName: "targetFace",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Number"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
export var top0 = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "top",
        constraints: {
            InclusiveMaximum: 1000,
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
export var top1 = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "top",
        defaultValue: 1000,
        constraints: {
            InclusiveMaximum: 1000,
            InclusiveMinimum: 1
        },
        type: {
            name: "Number"
        }
    }
};
export var type = {
    parameterPath: [
        "options",
        "type"
    ],
    mapper: {
        serializedName: "type",
        type: {
            name: "Enum",
            allowedValues: [
                "FaceList",
                "LargeFaceList",
                "LargePersonGroup",
                "PersonGroup"
            ]
        }
    }
};
export var userData = {
    parameterPath: [
        "options",
        "userData"
    ],
    mapper: {
        serializedName: "userData",
        constraints: {
            MaxLength: 1024
        },
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map